{
	"id": "65a13d4c627fd48c5cd7f3f935f31c61",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"viaIR": true,
			"remappings": []
		},
		"sources": {
			"SC_Bank_Registration.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity^0.8.0;\r\n\r\ncontract SC_Bank_Registration \r\n{\r\n    struct BankRegistration \r\n    {\r\n        address bankAddr;\r\n        uint256 timestamp_lock_security_money_by_bank;\r\n        uint256 timestamp_lock_security_money_by_Reg_Body;\r\n        bytes32 commitment;\r\n        uint256 timestamp_commitment;\r\n        bool response1;\r\n        uint256 timestamp_response1;\r\n        bool response2;\r\n        uint256 timestamp_response2;\r\n        uint256 unlock_amount_security_money_by_bank;\r\n        uint256 timestamp_unlock_security_money_by_bank;\r\n        uint256 unlock_amount_security_money_by_Reg_Body;\r\n        uint256 timestamp_unlock_security_money_by_Reg_Body;\r\n        bool protocol_aborted;\r\n    }\r\n\r\n    mapping(address => uint256) bankID; //Maps: bankID[bank address] => bankID\r\n    mapping(address => uint256) latestBankRegProtocolID; //Maps: latestBankRegProtocolID[bank address] => protocolID\r\n    mapping(uint256 => BankRegistration) bankRegistration; //Maps: bankRegistration[protocolID] => struct BankRegistration\r\n    mapping(uint256 => bool) bankRegistrationProtocolCurrentlyRuns; //Maps: bankRegistrationProtocolCurrentlyRuns[protocolID] => TRUE/FALSE\r\n\r\n    address public regulatory_Body;\r\n\r\n    uint256 public bankRegProtocolIDGenerator = 0;\r\n    uint256 public constant timeLimit = 300 seconds;\r\n    uint256 public constant lockingAmount = 1000 wei;\r\n    uint256 bankIDGenerator = 0;\r\n\r\n    constructor() \r\n    {\r\n        regulatory_Body = msg.sender;\r\n    }\r\n\r\n    /**\r\n        Interface to other smart contract\r\n    */\r\n    function getBankID(address _bankAddr) external view returns(uint256)\r\n    {\r\n        return(bankID[_bankAddr]);\r\n    }\r\n\r\n    function isBankIDValid(uint256 _bankID) external view returns(bool)\r\n    {\r\n        if(_bankID > 0 && _bankID <= bankIDGenerator)\r\n        {\r\n            return(true);\r\n        }\r\n        else\r\n        {\r\n            return(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n        PROTOCOL: Bank Registration \r\n    */\r\n\r\n    /**\r\n    Caller: Bank\r\n    When: To initiate bank registration process towards regulatory body.\r\n    Previous Function: NA\r\n    **/\r\n    function lockMoneyByBank() public payable\r\n    {\r\n        require(bankID[msg.sender] == 0, \"The bank is already registered!!\");\r\n        \r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[msg.sender];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == false, \"Previous instance of the bank registration protocol is not yet terminated!!\");\r\n        require(msg.value == lockingAmount, \"Incorrect locking amount!!\");\r\n\r\n        bankRegProtocolIDGenerator ++;\r\n        _bankRegProtocolID = bankRegProtocolIDGenerator;\r\n        latestBankRegProtocolID[msg.sender] = _bankRegProtocolID;\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        new_bank_registration.bankAddr = msg.sender;\r\n        new_bank_registration.timestamp_lock_security_money_by_bank = block.timestamp;\r\n\r\n        bankRegistration[_bankRegProtocolID] = new_bank_registration;\r\n\r\n        bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] = true;\r\n    }\r\n\r\n    /**\r\n    Caller: Bank\r\n    When: If the Regulatory body does not lock money within time limit, bank can abort the protocol and unlock its money.\r\n    Previous Function: lockMoneyByBank by bank\r\n    **/\r\n    function exit1BankReg() external\r\n    {\r\n        require(bankID[msg.sender] == 0, \"The bank is already registered!!\");\r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[msg.sender];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"The protocol is not yet started!!\");\r\n        \r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        require(new_bank_registration.bankAddr == msg.sender, \"You are not holding the intended address!!\");\r\n        //require(new_bank_registration.bankID == _bankID, \"Given bankID is not the intended one!!\");\r\n        require(new_bank_registration.timestamp_lock_security_money_by_bank != 0, \"The bank not yet locked the money!!\");\r\n        require(new_bank_registration.timestamp_lock_security_money_by_Reg_Body == 0, \"The Regulatory body has already locked its money!!\");\r\n        require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank) > timeLimit, \"Timelimit not yet exceeded!!\");\r\n\r\n        payable(msg.sender).transfer(lockingAmount);\r\n        new_bank_registration.unlock_amount_security_money_by_bank = lockingAmount;\r\n        new_bank_registration.timestamp_unlock_security_money_by_bank = block.timestamp;\r\n        //new_bank_registration.unlock_amount_security_money_by_Reg_Body = 0;\r\n        //new_bank_registration.timestamp_unlock_security_money_by_Reg_Body = block.timestamp;\r\n        new_bank_registration.protocol_aborted = true;\r\n        bankRegistration[_bankRegProtocolID] = new_bank_registration;\r\n\r\n        bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] = false;\r\n    }\r\n\r\n\r\n    /**\r\n    Caller: Regulatory body\r\n    When: Once bank locked money on smart contract, Regulatory body invokes this function to lock the security money.\r\n    Previous Function: lockMoneyByBank() by bank\r\n    **/\r\n\r\n    function lockMoneyByRegulatoryBody(address _bankAddr) external payable \r\n    {\r\n        require(msg.sender == regulatory_Body, \"Only reguatory body has access to invoke the function!!\");\r\n        require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\");\r\n        require(msg.value == lockingAmount, \"Incorrect locking amount!!\");\r\n\r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[_bankAddr];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\");\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        require(new_bank_registration.bankAddr == _bankAddr, \"Access denied as the given bank address is not intended!!\");\r\n        require(new_bank_registration.timestamp_lock_security_money_by_bank != 0, \"The bank not yet locked its money!!\");\r\n        require(new_bank_registration.timestamp_lock_security_money_by_Reg_Body == 0, \"The regulatory body has already locked its money!!\");\r\n        require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank <= timeLimit), \"Timelimit exceeded!!\");\r\n        \r\n        new_bank_registration.timestamp_lock_security_money_by_Reg_Body = block.timestamp;\r\n        bankRegistration[_bankRegProtocolID]  = new_bank_registration;\r\n    }\r\n\r\n\r\n    /**\r\n    Caller: Regulatory Body\r\n    When: Once Reg Body locked money on smart contract, but bank does not commit account info within time limit, \r\n          Reg Body can abort the protocol and unlock its money. Here, the system will penalize the bank by deducting\r\n          its locked amount and transfer the same to the Reg Body.\r\n    Previous Function: lockMoneyByRegulatoryBody() by Regulatory Body\r\n    **/\r\n    function exit2BankReg(address _bankAddr) external\r\n    {\r\n        require(msg.sender == regulatory_Body, \"Only reguatory body has access to invoke the function!!\");\r\n        require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\");\r\n        \r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[_bankAddr];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\");\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        require(new_bank_registration.bankAddr == _bankAddr, \"You are not holding the intended address!!\");\r\n        require(new_bank_registration.timestamp_lock_security_money_by_Reg_Body != 0, \"The regulatory body not yet locked the money!!\");\r\n        require(new_bank_registration.timestamp_commitment == 0, \"The customer has already commited for the account information!!\");\r\n        require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body) > timeLimit, \"Timelimit not yet exceeded!!\");\r\n\r\n        payable(msg.sender).transfer(2*lockingAmount);\r\n\r\n        new_bank_registration.unlock_amount_security_money_by_bank = 0;\r\n        new_bank_registration.unlock_amount_security_money_by_Reg_Body = 2*lockingAmount;\r\n        new_bank_registration.timestamp_unlock_security_money_by_bank = block.timestamp;\r\n        new_bank_registration.timestamp_unlock_security_money_by_Reg_Body = block.timestamp;\r\n\r\n        new_bank_registration.protocol_aborted = true;\r\n        bankRegistration[_bankRegProtocolID] = new_bank_registration;\r\n\r\n        bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] = false;\r\n    } \r\n\r\n\r\n    /**\r\n    Caller: Bank\r\n    When: After locking money by regulatory body, bank sends information regarding the proof of banking license(PoBL) in offline mode.\r\n          And invokes this function to commit the information send in offline.\r\n    Previous Function: lockMoneyByRegulatoryBody() by Regulatory body\r\n    **/\r\n\r\n    function commitPoBL(bytes32 _commit) external \r\n    {\r\n        require(bankID[msg.sender] == 0, \"The bank is already registered!!\");\r\n        \r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[msg.sender];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\");\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\");\r\n        require(new_bank_registration.timestamp_lock_security_money_by_Reg_Body != 0, \"The regulatory body not yet locked its money!!\");\r\n        require(new_bank_registration.timestamp_commitment == 0, \"The bank has already committed PoBL!!\");\r\n        require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body <= timeLimit), \"Timelimit exceeded!!\");\r\n\r\n        new_bank_registration.commitment = _commit;\r\n        new_bank_registration.timestamp_commitment = block.timestamp;\r\n\r\n        bankRegistration[_bankRegProtocolID]  = new_bank_registration;\r\n    }\r\n\r\n    /**\r\n    Caller: Bank\r\n    When: If the Regulatory body does not send response1 within time limit, bank can abort the protocol and unlock its money.\r\n          Here, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank.\r\n    Previous Function: commitPoBL() by bank\r\n    **/\r\n    function exit3BankReg() external\r\n    {\r\n        require(bankID[msg.sender] == 0, \"The bank is already registered!!\");\r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[msg.sender];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\");\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\");\r\n        require(new_bank_registration.timestamp_commitment != 0, \"The bank not yet commited for the account information!!\");\r\n        require(new_bank_registration.timestamp_response1 == 0, \"The regulatory body has not already send its first response!!\");\r\n        require((block.timestamp - new_bank_registration.timestamp_commitment) > timeLimit, \"Timelimit not yet exceeded!!\");\r\n\r\n        payable(msg.sender).transfer(2*lockingAmount);\r\n\r\n        new_bank_registration.unlock_amount_security_money_by_bank = 2*lockingAmount;\r\n        new_bank_registration.unlock_amount_security_money_by_Reg_Body = 0;\r\n        new_bank_registration.timestamp_unlock_security_money_by_bank = block.timestamp;\r\n        new_bank_registration.timestamp_unlock_security_money_by_Reg_Body = block.timestamp;\r\n\r\n        new_bank_registration.protocol_aborted = true;\r\n        bankRegistration[_bankRegProtocolID] = new_bank_registration;\r\n\r\n        bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] = false;\r\n    }\r\n\r\n\r\n    /**\r\n    Caller: Regulatory body\r\n    When: After the bank commits account information, the Regulatory body checks if the commitment matches with the received information.\r\n          And invokes this function to register the response.\r\n    Previous Function: commitPoBL() by bank\r\n    **/\r\n\r\n    function checkIfCommitmentMatches(address _bankAddr, bool _response1) external\r\n    {\r\n        require(regulatory_Body == msg.sender, \"Only reguatory body has access to invoke the function!!\");\r\n\r\n        require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\");\r\n\r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[_bankAddr];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\");\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        require(new_bank_registration.timestamp_commitment != 0, \"The bank not yet committed!!\");\r\n        require(new_bank_registration.timestamp_response1 == 0, \"The regulatory body already send its response1!!\");\r\n        require(block.timestamp - new_bank_registration.timestamp_commitment <= timeLimit, \"Timelimit exceeded!!\");\r\n\r\n        new_bank_registration.response1 = _response1;\r\n        new_bank_registration.timestamp_response1 = block.timestamp;\r\n\r\n        if(_response1 == false) \r\n        {\r\n            payable(_bankAddr).transfer(lockingAmount);\r\n            payable(msg.sender).transfer(lockingAmount);\r\n\r\n            new_bank_registration.unlock_amount_security_money_by_bank = lockingAmount;\r\n            new_bank_registration.unlock_amount_security_money_by_Reg_Body = lockingAmount;\r\n            new_bank_registration.timestamp_unlock_security_money_by_bank = block.timestamp;\r\n            new_bank_registration.timestamp_unlock_security_money_by_Reg_Body = block.timestamp;\r\n\r\n            new_bank_registration.protocol_aborted = true;\r\n            bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] = false;\r\n        }\r\n\r\n        bankRegistration[_bankRegProtocolID]  = new_bank_registration;\r\n    }\r\n\r\n\r\n    /**\r\n    Caller: Bank\r\n    When: If the Regulatory body does not send response2 within time limit, bank can abort the protocol and unlock its money.\r\n          Here, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank.\r\n    Previous Function: checkIfCommitmentMatches() by Reg Body\r\n    **/\r\n    function exit4BankReg() external\r\n    {\r\n        require(bankID[msg.sender] == 0, \"The bank is already registered!!\");\r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[msg.sender];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\");\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID];\r\n        require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\");\r\n        require(new_bank_registration.timestamp_response1 != 0, \"The regulatory body has already send its first response!!\");\r\n        require(new_bank_registration.timestamp_response2 == 0, \"The regulatory body has not already send its second response!!\");\r\n        require((block.timestamp - new_bank_registration.timestamp_response1) > timeLimit, \"Timelimit not yet exceeded!!\");\r\n\r\n        payable(msg.sender).transfer(2*lockingAmount);\r\n\r\n        new_bank_registration.unlock_amount_security_money_by_bank = 2*lockingAmount;\r\n        new_bank_registration.unlock_amount_security_money_by_Reg_Body = 0;\r\n        new_bank_registration.timestamp_unlock_security_money_by_bank = block.timestamp;\r\n        new_bank_registration.timestamp_unlock_security_money_by_Reg_Body = block.timestamp;\r\n\r\n        new_bank_registration.protocol_aborted = true;\r\n        bankRegistration[_bankRegProtocolID] = new_bank_registration;\r\n\r\n        bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] = false;\r\n    }\r\n\r\n\r\n    /**\r\n    Caller: Regulatory body\r\n    When: Once the Regulatory body verifies if the bank belongs to the Regulatory body, it invokes this function to register the verification result on BC.\r\n    Previous Function: checkIfCommitmentMatches() by Regulatory body\r\n    **/\r\n\r\n    function sendVerificationResult(address _bankAddr, bool _response2) external \r\n    {\r\n        require(regulatory_Body == msg.sender, \"Only reguatory body has access to invoke the function!!\");\r\n        require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\");\r\n        uint256 _bankRegProtocolID  = latestBankRegProtocolID[_bankAddr];\r\n        require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\");\r\n\r\n        BankRegistration memory new_bank_registration = bankRegistration[_bankRegProtocolID] ;\r\n        require(new_bank_registration.timestamp_response2 == 0, \"The regulatory body has already send its response2!!\");\r\n        require(new_bank_registration.timestamp_response1 != 0, \"The regulatory body must provide its response1 before sending response2!!\");\r\n        require(block.timestamp - new_bank_registration.timestamp_response1 <= timeLimit, \"Timelimit exceeded\");\r\n\r\n        new_bank_registration.response2 = _response2;\r\n        new_bank_registration.timestamp_response2 = block.timestamp;\r\n    \r\n        payable(_bankAddr).transfer(lockingAmount);\r\n        payable(msg.sender).transfer(lockingAmount);\r\n\r\n        new_bank_registration.unlock_amount_security_money_by_bank = lockingAmount;\r\n        new_bank_registration.unlock_amount_security_money_by_Reg_Body = lockingAmount;\r\n        new_bank_registration.timestamp_unlock_security_money_by_bank = block.timestamp;\r\n        new_bank_registration.timestamp_unlock_security_money_by_Reg_Body = block.timestamp;\r\n        \r\n        if(_response2 == true) \r\n        {\r\n            bankIDGenerator++;\r\n            bankID[_bankAddr] = bankIDGenerator; \r\n            \r\n        }\r\n        else\r\n        {\r\n            new_bank_registration.protocol_aborted = true;\r\n        }\r\n        \r\n        bankRegistration[_bankRegProtocolID]  = new_bank_registration;\r\n        bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] = false;\r\n    }\r\n\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"SC_Bank_Registration.sol": {
				"SC_Bank_Registration": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "bankRegProtocolIDGenerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bankAddr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_response1",
									"type": "bool"
								}
							],
							"name": "checkIfCommitmentMatches",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_commit",
									"type": "bytes32"
								}
							],
							"name": "commitPoBL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit1BankReg",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bankAddr",
									"type": "address"
								}
							],
							"name": "exit2BankReg",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit3BankReg",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit4BankReg",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bankAddr",
									"type": "address"
								}
							],
							"name": "getBankID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bankID",
									"type": "uint256"
								}
							],
							"name": "isBankIDValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockMoneyByBank",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bankAddr",
									"type": "address"
								}
							],
							"name": "lockMoneyByRegulatoryBody",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "regulatory_Body",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bankAddr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_response2",
									"type": "bool"
								}
							],
							"name": "sendVerificationResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"SC_Bank_Registration.sol\":1296:1297  0 */\n  0x00\n  0x05\n    /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n  dup2\n  swap1\n  sstore\n    /* \"SC_Bank_Registration.sol\":1439:1440  0 */\n  0x06\n    /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n  sstore\n    /* \"SC_Bank_Registration.sol\":1480:1508  regulatory_Body = msg.sender */\n  0x04\n    /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"SC_Bank_Registration.sol\":1498:1508  msg.sender */\n  caller\n    /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n  or\n  swap1\n  sstore\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_16, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_16:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x25ab292e\n      eq\n      tag_18\n      jumpi\n      pop\n      dup1\n      0x294a5806\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x33bcc388\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x379cc80d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x45b0f171\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x5013ad87\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x62f59501\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x75e5a871\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x9cfd3699\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x9ec802ff\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xbbd9f9b1\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xc08d1fe5\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xc5fe01e4\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xd1706b6c\n      eq\n      tag_44\n      jumpi\n      0xf93be9e3\n      eq\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      tag_52\n      tag_1\n      jump\t// in\n    tag_52:\n        /* \"SC_Bank_Registration.sol\":7193:7290  require(msg.sender == regulatory_Body, \"Only reguatory body has access to invoke the function!!\") */\n      tag_53\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x04)\n      and\n        /* \"SC_Bank_Registration.sol\":7201:7211  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":7201:7230  msg.sender == regulatory_Body */\n      eq\n        /* \"SC_Bank_Registration.sol\":7193:7290  require(msg.sender == regulatory_Body, \"Only reguatory body has access to invoke the function!!\") */\n      tag_11\n      jump\t// in\n    tag_53:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":7301:7405  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_54\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":7309:7331  bankID[_bankAddr] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":7301:7405  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_12\n      jump\t// in\n    tag_54:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      sload(keccak256(0x00, 0x40))\n      swap1\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x03)\n        /* \"SC_Bank_Registration.sol\":7501:7648  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_55\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":7509:7574  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":7501:7648  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_13\n      jump\t// in\n    tag_55:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":7709:7725  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      mload(0x40)\n      swap2\n      0x01c0\n      dup4\n      add\n      swap2\n      dup4\n      dup4\n      lt\n      0xffffffffffffffff\n      dup5\n      gt\n      or\n      tag_56\n      jumpi\n        /* \"SC_Bank_Registration.sol\":7756:7854  require(new_bank_registration.bankAddr == _bankAddr, \"You are not holding the intended address!!\") */\n      tag_58\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      swap3\n      0x40\n      mstore\n      0xff\n      0x0d\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      sload\n      and\n      swap4\n      dup5\n      dup8\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      0x20\n      dup9\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":7709:7725  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup9\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup9\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup9\n      add\n      mstore\n      dup3\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup9\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup9\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup9\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup9\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup9\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup9\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup9\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup9\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup6\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"SC_Bank_Registration.sol\":7764:7807  new_bank_registration.bankAddr == _bankAddr */\n      eq\n        /* \"SC_Bank_Registration.sol\":7756:7854  require(new_bank_registration.bankAddr == _bankAddr, \"You are not holding the intended address!!\") */\n      tag_8\n      jump\t// in\n    tag_58:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":7873:7941  new_bank_registration.timestamp_lock_security_money_by_Reg_Body != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_59\n      jumpi\n      0x80\n      dup2\n      add\n      mload\n      tag_61\n      jumpi\n        /* \"SC_Bank_Registration.sol\":8137:8273  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body) > timeLimit, \"Timelimit not yet exceeded!!\") */\n      tag_63\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":8146:8227  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body */\n      tag_64\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x40\n      dup5\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":8146:8161  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":8146:8227  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body */\n      tag_9\n      jump\t// in\n    tag_64:\n        /* \"SC_Bank_Registration.sol\":8145:8240  (block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body) > timeLimit */\n      gt\n        /* \"SC_Bank_Registration.sol\":8137:8273  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body) > timeLimit, \"Timelimit not yet exceeded!!\") */\n      tag_10\n      jump\t// in\n    tag_63:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x07d0\n        /* \"SC_Bank_Registration.sol\":7201:7211  msg.sender */\n      swap2\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n        /* \"SC_Bank_Registration.sol\":7201:7211  msg.sender */\n      dup1\n      dup1\n      dup1\n      dup7\n      caller\n        /* \"SC_Bank_Registration.sol\":8286:8331  payable(msg.sender).transfer(2*lockingAmount) */\n      dup3\n      call\n      iszero\n      tag_65\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_67\n      swap3\n      0x00\n      0x0120\n      dup5\n      add\n      mstore\n      0x0160\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":8146:8161  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0140\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":8146:8161  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0180\n      dup4\n      add\n      mstore\n      0x01\n      0x01a0\n      dup4\n      add\n      mstore\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":7709:7725  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":7709:7725  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x05\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_68:\n      0xc0\n      dup2\n      add\n      mload\n      0x06\n      dup6\n      add\n      sstore\n      tag_69\n      0xe0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x07\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_69:\n      0x0100\n      dup2\n      add\n      mload\n      0x08\n      dup6\n      add\n      sstore\n      0x0120\n      dup2\n      add\n      mload\n      0x09\n      dup6\n      add\n      sstore\n      0x0140\n      dup2\n      add\n      mload\n      0x0a\n      dup6\n      add\n      sstore\n      0x0160\n      dup2\n      add\n      mload\n      0x0b\n      dup6\n      add\n      sstore\n      0x0180\n      dup2\n      add\n      mload\n      0x0c\n      dup6\n      add\n      sstore\n      add\n      mload\n      iszero\n      iszero\n      swap2\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_67:\n      mstore(0x20, 0x03)\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      stop\n        /* \"SC_Bank_Registration.sol\":8286:8331  payable(msg.sender).transfer(2*lockingAmount) */\n    tag_65:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_61:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x3f\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520637573746f6d65722068617320616c726561647920636f6d6d697465\n      0x44\n      dup3\n      add\n      mstore\n      0x6420666f7220746865206163636f756e7420696e666f726d6174696f6e212100\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_59:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x2e\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x90, 0x656420746865206d6f6e65792121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_56:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_50:\n      0x00\n      dup1\n      revert\n    tag_44:\n      jumpi(tag_50, callvalue)\n      tag_72\n      calldatasize\n      tag_2\n      jump\t// in\n    tag_72:\n        /* \"SC_Bank_Registration.sol\":16881:16978  require(regulatory_Body == msg.sender, \"Only reguatory body has access to invoke the function!!\") */\n      tag_73\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x04)\n      and\n        /* \"SC_Bank_Registration.sol\":16908:16918  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":16889:16918  regulatory_Body == msg.sender */\n      eq\n        /* \"SC_Bank_Registration.sol\":16881:16978  require(regulatory_Body == msg.sender, \"Only reguatory body has access to invoke the function!!\") */\n      tag_11\n      jump\t// in\n    tag_73:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":16989:17093  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_74\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":16997:17019  bankID[_bankAddr] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":16989:17093  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_12\n      jump\t// in\n    tag_74:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      sload(keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":17187:17224  bankRegistrationProtocolCurrentlyRuns */\n      0x03\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n        /* \"SC_Bank_Registration.sol\":17179:17326  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_75\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":17187:17252  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":17179:17326  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_13\n      jump\t// in\n    tag_75:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":17387:17403  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      mload(0x40)\n      swap3\n      0x01c0\n      dup5\n      add\n      dup5\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_56\n      jumpi\n      0x40\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      sload\n      and\n      dup5\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      0x20\n      dup6\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":17387:17403  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup6\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":17187:17224  bankRegistrationProtocolCurrentlyRuns */\n      0x03\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x60\n      dup6\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup6\n      add\n      mstore\n      0xff\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup6\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup6\n      add\n      mstore\n      0xff\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup6\n      add\n      mstore\n      0xff\n      0x0d\n      0x08\n      dup4\n      add\n      sload\n      swap3\n      dup4\n      0x0100\n      dup9\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup9\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup9\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup9\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup9\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup6\n      add\n      mstore\n      tag_78\n      jumpi\n      0xc0\n      dup4\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":17565:17611  new_bank_registration.timestamp_response1 != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_80\n      jumpi\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":17708:17767  block.timestamp - new_bank_registration.timestamp_response1 */\n      tag_82\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0xc0\n      dup6\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":17708:17723  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":17708:17767  block.timestamp - new_bank_registration.timestamp_response1 */\n      tag_9\n      jump\t// in\n    tag_82:\n        /* \"SC_Bank_Registration.sol\":17708:17780  block.timestamp - new_bank_registration.timestamp_response1 <= timeLimit */\n      gt\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_83\n      jumpi\n      iszero\n      iszero\n      0xe0\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n        /* \"SC_Bank_Registration.sol\":17708:17723  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0100\n      dup5\n      add\n      mstore\n      swap3\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n      0x00\n      dup1\n      dup1\n      dup1\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup8\n      and\n      dup3\n        /* \"SC_Bank_Registration.sol\":17947:17989  payable(_bankAddr).transfer(lockingAmount) */\n      call\n      iszero\n      tag_65\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n        /* \"SC_Bank_Registration.sol\":16908:16918  msg.sender */\n      dup1\n      dup1\n      dup1\n      dup5\n      caller\n        /* \"SC_Bank_Registration.sol\":18000:18043  payable(msg.sender).transfer(lockingAmount) */\n      dup3\n      call\n      iszero\n      tag_65\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_67\n      swap5\n      dup2\n      0x01\n      swap3\n      0x0120\n      dup8\n      add\n      mstore\n      0x0160\n      dup7\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":17708:17723  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0140\n      dup7\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":17708:17723  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0180\n      dup7\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":18427:18445  _response2 == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":18424:18662  if(_response2 == true) ... */\n      0x00\n        /* \"SC_Bank_Registration.sol\":17134:17157  latestBankRegProtocolID */\n      eq\n      tag_90\n      jumpi\n        /* \"SC_Bank_Registration.sol\":18472:18489  bankIDGenerator++ */\n      tag_92\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(0x06)\n        /* \"SC_Bank_Registration.sol\":18472:18489  bankIDGenerator++ */\n      tag_6\n      jump\t// in\n    tag_92:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      swap1\n      dup2\n      0x06\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      sstore\n        /* \"SC_Bank_Registration.sol\":18424:18662  if(_response2 == true) ... */\n    tag_93:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":17387:17403  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":17387:17403  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":17187:17224  bankRegistrationProtocolCurrentlyRuns */\n      0x03\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x05\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"SC_Bank_Registration.sol\":18424:18662  if(_response2 == true) ... */\n    tag_90:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      pop\n      0x01\n      0x01a0\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":18424:18662  if(_response2 == true) ... */\n      jump(tag_93)\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n    tag_83:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x151a5b595b1a5b5a5d08195e18d959591959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_80:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x49\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f6479206d7573742070726f76696465\n      0x44\n      dup3\n      add\n      mstore\n      0x2069747320726573706f6e736531206265666f72652073656e64696e67207265\n      0x64\n      dup3\n      add\n      mstore\n      shl(0xb8, 0x73706f6e7365322121)\n      0x84\n      dup3\n      add\n      mstore\n      0xa4\n      swap1\n      revert\n    tag_78:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x34\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f64792068617320616c726561647920\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x60, 0x73656e642069747320726573706f6e7365322121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_42:\n      jumpi(tag_50, callvalue)\n      tag_98\n      calldatasize\n      tag_2\n      jump\t// in\n    tag_98:\n        /* \"SC_Bank_Registration.sol\":12767:12864  require(regulatory_Body == msg.sender, \"Only reguatory body has access to invoke the function!!\") */\n      tag_99\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x04)\n      and\n        /* \"SC_Bank_Registration.sol\":12794:12804  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":12775:12804  regulatory_Body == msg.sender */\n      eq\n        /* \"SC_Bank_Registration.sol\":12767:12864  require(regulatory_Body == msg.sender, \"Only reguatory body has access to invoke the function!!\") */\n      tag_11\n      jump\t// in\n    tag_99:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":12877:12981  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_100\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":12885:12907  bankID[_bankAddr] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":12877:12981  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_12\n      jump\t// in\n    tag_100:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      sload(keccak256(0x00, 0x40))\n      swap2\n      dup3\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":13077:13114  bankRegistrationProtocolCurrentlyRuns */\n      0x03\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n        /* \"SC_Bank_Registration.sol\":13069:13216  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_101\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":13077:13142  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":13069:13216  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_13\n      jump\t// in\n    tag_101:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup3\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":13277:13293  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      mload(0x40)\n      swap3\n      0x01c0\n      dup5\n      add\n      dup5\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_56\n      jumpi\n      0x40\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      sload\n      and\n      dup5\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      0x20\n      dup6\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":13277:13293  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup6\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":13077:13114  bankRegistrationProtocolCurrentlyRuns */\n      0x03\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x60\n      dup6\n      add\n      mstore\n      0xff\n      0x0d\n      0x04\n      dup4\n      add\n      sload\n      swap3\n      dup4\n      0x80\n      dup9\n      add\n      mstore\n      dup3\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup9\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup9\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup9\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup9\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup9\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup9\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup9\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup9\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup6\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":13332:13379  new_bank_registration.timestamp_commitment != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_104\n      jumpi\n      0xc0\n      dup4\n      add\n      mload\n      tag_106\n      jumpi\n        /* \"SC_Bank_Registration.sol\":13541:13647  require(block.timestamp - new_bank_registration.timestamp_commitment <= timeLimit, \"Timelimit exceeded!!\") */\n      tag_108\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":13549:13609  block.timestamp - new_bank_registration.timestamp_commitment */\n      tag_109\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x80\n      dup7\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":13549:13564  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":13549:13609  block.timestamp - new_bank_registration.timestamp_commitment */\n      tag_9\n      jump\t// in\n    tag_109:\n        /* \"SC_Bank_Registration.sol\":13549:13622  block.timestamp - new_bank_registration.timestamp_commitment <= timeLimit */\n      gt\n      iszero\n        /* \"SC_Bank_Registration.sol\":13541:13647  require(block.timestamp - new_bank_registration.timestamp_commitment <= timeLimit, \"Timelimit exceeded!!\") */\n      tag_14\n      jump\t// in\n    tag_108:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      iszero\n      dup1\n      iszero\n      0xa0\n      dup5\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":13549:13564  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0xc0\n      dup5\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":13787:14466  if(_response1 == false) ... */\n      tag_110\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n    tag_111:\n      pop\n      tag_112\n      swap2\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":13277:13293  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":13277:13293  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":13077:13114  bankRegistrationProtocolCurrentlyRuns */\n      0x03\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x05\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_112:\n      stop\n        /* \"SC_Bank_Registration.sol\":13787:14466  if(_response1 == false) ... */\n    tag_110:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      dup1\n      dup1\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      swap5\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"SC_Bank_Registration.sol\":13836:13878  payable(_bankAddr).transfer(lockingAmount) */\n      dup3\n      call\n      iszero\n      tag_65\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n        /* \"SC_Bank_Registration.sol\":12794:12804  msg.sender */\n      dup1\n      dup1\n      dup1\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":12794:12804  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":13893:13936  payable(msg.sender).transfer(lockingAmount) */\n      dup3\n      call\n      iszero\n      tag_65\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_112\n      swap2\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0120\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0160\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":13549:13564  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0140\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":13549:13564  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0180\n      dup4\n      add\n      mstore\n      0x01\n      0x01a0\n      dup4\n      add\n      mstore\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":13077:13114  bankRegistrationProtocolCurrentlyRuns */\n      0x03\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"SC_Bank_Registration.sol\":13787:14466  if(_response1 == false) ... */\n      swap2\n      jump(tag_111)\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n    tag_106:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x30\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f647920616c72656164792073656e64\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x80, 0x2069747320726573706f6e7365312121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_104:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x5468652062616e6b206e6f742079657420636f6d6d6974746564212100000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_40:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      mstore\n      return\n    tag_38:\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"SC_Bank_Registration.sol\":2234:2244  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":2219:2287  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_125\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":2227:2250  bankID[msg.sender] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":2219:2287  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_4\n      jump\t// in\n    tag_125:\n        /* \"SC_Bank_Registration.sol\":2234:2244  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":2338:2361  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      mstore(0x00, sload(keccak256(0x00, 0x40)))\n      mstore(0x20, 0x03)\n      jumpi(tag_126, and(sload(keccak256(0x00, 0x40)), 0xff))\n        /* \"SC_Bank_Registration.sol\":2549:2614  require(msg.value == lockingAmount, \"Incorrect locking amount!!\") */\n      tag_128\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":2557:2566  msg.value */\n      callvalue\n        /* \"SC_Bank_Registration.sol\":2557:2583  msg.value == lockingAmount */\n      eq\n        /* \"SC_Bank_Registration.sol\":2549:2614  require(msg.value == lockingAmount, \"Incorrect locking amount!!\") */\n      tag_5\n      jump\t// in\n    tag_128:\n        /* \"SC_Bank_Registration.sol\":2627:2656  bankRegProtocolIDGenerator ++ */\n      tag_129\n      0x05\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload\n        /* \"SC_Bank_Registration.sol\":2627:2656  bankRegProtocolIDGenerator ++ */\n      tag_6\n      jump\t// in\n    tag_129:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup1\n        /* \"SC_Bank_Registration.sol\":2627:2656  bankRegProtocolIDGenerator ++ */\n      0x05\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sstore\n        /* \"SC_Bank_Registration.sol\":2234:2244  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":2338:2361  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      dup1\n      keccak256(0x00, 0x40)\n      sstore\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":2842:2858  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      mload(0x40)\n      swap1\n      0x01c0\n      dup3\n      add\n      swap3\n      dup3\n      dup5\n      lt\n      0xffffffffffffffff\n      dup6\n      gt\n      or\n      tag_56\n      jumpi\n      0x0d\n      0xff\n      swap2\n      tag_132\n      swap6\n      0x40\n      mstore\n        /* \"SC_Bank_Registration.sol\":2842:2858  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup7\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup7\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup7\n      add\n      mstore\n      dup3\n        /* \"SC_Bank_Registration.sol\":2627:2656  bankRegProtocolIDGenerator ++ */\n      0x05\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup7\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup7\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup7\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup7\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup7\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup7\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup7\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup7\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":2234:2244  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup3\n      mstore\n        /* \"SC_Bank_Registration.sol\":3005:3020  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      dup4\n      add\n      mstore\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":2842:2858  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":2338:2361  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":2842:2858  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n        /* \"SC_Bank_Registration.sol\":2627:2656  bankRegProtocolIDGenerator ++ */\n      0x05\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_132:\n      mstore(0x20, 0x03)\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"SC_Bank_Registration.sol\":2338:2361  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      or\n      swap1\n      sstore\n      stop\n    tag_126:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x4b\n      0x24\n      dup3\n      add\n      mstore\n      0x50726576696f757320696e7374616e6365206f66207468652062616e6b207265\n      0x44\n      dup3\n      add\n      mstore\n      0x67697374726174696f6e2070726f746f636f6c206973206e6f74207965742074\n      0x64\n      dup3\n      add\n      mstore\n      shl(0xa8, 0x65726d696e617465642121)\n      0x84\n      dup3\n      add\n      mstore\n      0xa4\n      swap1\n      revert\n    tag_36:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_139\n      calldataload(0x04)\n      tag_3\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_144\n      tag_1\n      jump\t// in\n    tag_144:\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_32:\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      tag_147\n      tag_1\n      jump\t// in\n    tag_147:\n        /* \"SC_Bank_Registration.sol\":5371:5468  require(msg.sender == regulatory_Body, \"Only reguatory body has access to invoke the function!!\") */\n      tag_148\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x04)\n      and\n        /* \"SC_Bank_Registration.sol\":5379:5389  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":5379:5408  msg.sender == regulatory_Body */\n      eq\n        /* \"SC_Bank_Registration.sol\":5371:5468  require(msg.sender == regulatory_Body, \"Only reguatory body has access to invoke the function!!\") */\n      tag_11\n      jump\t// in\n    tag_148:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":5479:5583  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_149\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":5487:5509  bankID[_bankAddr] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":5479:5583  require(bankID[_bankAddr] == 0, \"The given bank address is incorrect. The bank is already registered!!\") */\n      tag_12\n      jump\t// in\n    tag_149:\n        /* \"SC_Bank_Registration.sol\":5594:5659  require(msg.value == lockingAmount, \"Incorrect locking amount!!\") */\n      tag_150\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":5602:5611  msg.value */\n      callvalue\n        /* \"SC_Bank_Registration.sol\":5602:5628  msg.value == lockingAmount */\n      eq\n        /* \"SC_Bank_Registration.sol\":5594:5659  require(msg.value == lockingAmount, \"Incorrect locking amount!!\") */\n      tag_5\n      jump\t// in\n    tag_150:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      sload(keccak256(0x00, 0x40))\n      swap1\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x03)\n        /* \"SC_Bank_Registration.sol\":5747:5894  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_151\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":5755:5820  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":5747:5894  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_13\n      jump\t// in\n    tag_151:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":5955:5971  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap2\n      0x01c0\n      dup4\n      add\n      dup4\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_56\n      jumpi\n      0x40\n      mstore\n      0xff\n      0x0d\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      sload\n      and\n      swap4\n      dup5\n      dup7\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      0x20\n      dup8\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":5955:5971  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup8\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup8\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup8\n      add\n      mstore\n      dup3\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup8\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup8\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup8\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup8\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup8\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup8\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup8\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup8\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup5\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"SC_Bank_Registration.sol\":6010:6053  new_bank_registration.bankAddr == _bankAddr */\n      sub\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_154\n      jumpi\n      0x20\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":6134:6198  new_bank_registration.timestamp_lock_security_money_by_bank != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_156\n      jumpi\n      0x40\n      dup2\n      add\n      mload\n      tag_158\n      jumpi\n      tag_112\n      swap2\n        /* \"SC_Bank_Registration.sol\":6391:6516  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank <= timeLimit), \"Timelimit exceeded!!\") */\n      tag_161\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":6400:6477  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank */\n      tag_109\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      dup6\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":6400:6415  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":6400:6477  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank */\n      tag_9\n      jump\t// in\n        /* \"SC_Bank_Registration.sol\":6391:6516  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank <= timeLimit), \"Timelimit exceeded!!\") */\n    tag_161:\n        /* \"SC_Bank_Registration.sol\":6400:6415  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x40\n      dup4\n      add\n      mstore\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":5955:5971  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":5955:5971  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x05\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_158:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x32\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f64792068617320616c726561647920\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x70, 0x6c6f636b656420697473206d6f6e65792121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_156:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x5468652062616e6b206e6f7420796574206c6f636b656420697473206d6f6e65\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe8, 0x792121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_154:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x39\n      0x24\n      dup3\n      add\n      mstore\n      0x4163636573732064656e6965642061732074686520676976656e2062616e6b20\n      0x44\n      dup3\n      add\n      mstore\n      0x61646472657373206973206e6f7420696e74656e646564212100000000000000\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_30:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"SC_Bank_Registration.sol\":10841:10851  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":10826:10894  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_169\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":10834:10857  bankID[msg.sender] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":10826:10894  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_4\n      jump\t// in\n    tag_169:\n        /* \"SC_Bank_Registration.sol\":10841:10851  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":10935:10958  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x03)\n        /* \"SC_Bank_Registration.sol\":10981:11128  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_170\n        /* \"SC_Bank_Registration.sol\":10935:10958  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":10989:11054  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":10981:11128  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_13\n      jump\t// in\n    tag_170:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":11189:11205  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      0x01c0\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      lt\n      0xffffffffffffffff\n      dup4\n      gt\n      or\n      tag_56\n      jumpi\n        /* \"SC_Bank_Registration.sol\":11236:11360  require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\") */\n      tag_173\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      swap2\n      0x40\n      mstore\n      0xff\n      0x0d\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      sload\n      and\n      swap3\n      dup4\n      dup7\n      mstore\n        /* \"SC_Bank_Registration.sol\":10935:10958  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x20\n      dup8\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":11189:11205  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup8\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup8\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup8\n      add\n      mstore\n      dup3\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup8\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup8\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup8\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup8\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup8\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup8\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup8\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup8\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup5\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":10841:10851  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":11244:11288  new_bank_registration.bankAddr == msg.sender */\n      eq\n        /* \"SC_Bank_Registration.sol\":11236:11360  require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\") */\n      tag_15\n      jump\t// in\n    tag_173:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x80\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":11379:11426  new_bank_registration.timestamp_commitment != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_174\n      jumpi\n      0xc0\n      dup2\n      add\n      mload\n      tag_176\n      jumpi\n        /* \"SC_Bank_Registration.sol\":11628:11743  require((block.timestamp - new_bank_registration.timestamp_commitment) > timeLimit, \"Timelimit not yet exceeded!!\") */\n      tag_178\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":11637:11697  block.timestamp - new_bank_registration.timestamp_commitment */\n      tag_64\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x80\n      dup5\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":11637:11652  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":11637:11697  block.timestamp - new_bank_registration.timestamp_commitment */\n      tag_9\n      jump\t// in\n        /* \"SC_Bank_Registration.sol\":11628:11743  require((block.timestamp - new_bank_registration.timestamp_commitment) > timeLimit, \"Timelimit not yet exceeded!!\") */\n    tag_178:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x07d0\n        /* \"SC_Bank_Registration.sol\":10841:10851  msg.sender */\n      swap2\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n        /* \"SC_Bank_Registration.sol\":10841:10851  msg.sender */\n      dup1\n      dup1\n      dup1\n      dup7\n      caller\n        /* \"SC_Bank_Registration.sol\":11756:11801  payable(msg.sender).transfer(2*lockingAmount) */\n      dup3\n      call\n      iszero\n      tag_65\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_67\n      swap3\n      0x0120\n      dup4\n      add\n      mstore\n      0x00\n      0x0160\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":11637:11652  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0140\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":11637:11652  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0180\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":10935:10958  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01a0\n      dup4\n      add\n      mstore\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":11189:11205  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":10935:10958  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":11189:11205  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x05\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_176:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x3d\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f647920686173206e6f7420616c7265\n      0x44\n      dup3\n      add\n      mstore\n      0x6164792073656e642069747320666972737420726573706f6e73652121000000\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_174:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x37\n      0x24\n      dup3\n      add\n      mstore\n      0x5468652062616e6b206e6f742079657420636f6d6d6974656420666f72207468\n      0x44\n      dup3\n      add\n      mstore\n      0x65206163636f756e7420696e666f726d6174696f6e2121000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_28:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_26:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"SC_Bank_Registration.sol\":1252:1297  uint256 public bankRegProtocolIDGenerator = 0 */\n      0x05\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_24:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"SC_Bank_Registration.sol\":3457:3467  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":3442:3510  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_197\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":3450:3473  bankID[msg.sender] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":3442:3510  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_4\n      jump\t// in\n    tag_197:\n        /* \"SC_Bank_Registration.sol\":3457:3467  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":3551:3574  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x03)\n        /* \"SC_Bank_Registration.sol\":3551:3574  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":3605:3670  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      sub\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_198\n      jumpi\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":3779:3795  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      0x01c0\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      lt\n      0xffffffffffffffff\n      dup4\n      gt\n      or\n      tag_56\n      jumpi\n        /* \"SC_Bank_Registration.sol\":3826:3925  require(new_bank_registration.bankAddr == msg.sender, \"You are not holding the intended address!!\") */\n      tag_202\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      swap2\n      0x40\n      mstore\n      0xff\n      0x0d\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      sload\n      and\n      swap3\n      dup4\n      dup7\n      mstore\n        /* \"SC_Bank_Registration.sol\":3551:3574  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x20\n      dup8\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":3779:3795  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup8\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup8\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup8\n      add\n      mstore\n      dup3\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup8\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup8\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup8\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup8\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup8\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup8\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup8\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup8\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup5\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":3457:3467  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":3834:3878  new_bank_registration.bankAddr == msg.sender */\n      eq\n        /* \"SC_Bank_Registration.sol\":3826:3925  require(new_bank_registration.bankAddr == msg.sender, \"You are not holding the intended address!!\") */\n      tag_8\n      jump\t// in\n    tag_202:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":4047:4111  new_bank_registration.timestamp_lock_security_money_by_bank != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_203\n      jumpi\n      0x40\n      dup2\n      add\n      mload\n      tag_205\n      jumpi\n        /* \"SC_Bank_Registration.sol\":4304:4436  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank) > timeLimit, \"Timelimit not yet exceeded!!\") */\n      tag_207\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":4313:4390  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank */\n      tag_64\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      dup5\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":4313:4328  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":4313:4390  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank */\n      tag_9\n      jump\t// in\n        /* \"SC_Bank_Registration.sol\":4304:4436  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_bank) > timeLimit, \"Timelimit not yet exceeded!!\") */\n    tag_207:\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":3457:3467  msg.sender */\n      swap2\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n        /* \"SC_Bank_Registration.sol\":3457:3467  msg.sender */\n      dup1\n      dup1\n      dup1\n      dup7\n      caller\n        /* \"SC_Bank_Registration.sol\":4449:4492  payable(msg.sender).transfer(lockingAmount) */\n      dup3\n      call\n      iszero\n      tag_65\n      jumpi\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_67\n      swap3\n      0x0120\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":4313:4328  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x0140\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":3551:3574  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01a0\n      dup4\n      add\n      mstore\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":3779:3795  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":3551:3574  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":3779:3795  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x05\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_205:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x32\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520526567756c61746f727920626f64792068617320616c726561647920\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x70, 0x6c6f636b656420697473206d6f6e65792121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_203:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x5468652062616e6b206e6f7420796574206c6f636b656420746865206d6f6e65\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe8, 0x792121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_198:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x5468652070726f746f636f6c206973206e6f7420796574207374617274656421\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xf8, 0x21)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_22:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"SC_Bank_Registration.sol\":14975:14985  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":14960:15028  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_218\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":14968:14991  bankID[msg.sender] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":14960:15028  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_4\n      jump\t// in\n    tag_218:\n        /* \"SC_Bank_Registration.sol\":14975:14985  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":15069:15092  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x03)\n        /* \"SC_Bank_Registration.sol\":15115:15262  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_219\n        /* \"SC_Bank_Registration.sol\":15069:15092  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":15123:15188  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":15115:15262  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_13\n      jump\t// in\n    tag_219:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":15323:15339  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      0x01c0\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      lt\n      0xffffffffffffffff\n      dup4\n      gt\n      or\n      tag_56\n      jumpi\n        /* \"SC_Bank_Registration.sol\":15370:15494  require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\") */\n      tag_222\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      swap2\n      0x40\n      mstore\n      0xff\n      0x0d\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      sload\n      and\n      swap3\n      dup4\n      dup7\n      mstore\n        /* \"SC_Bank_Registration.sol\":15069:15092  latestBankRegProtocolID */\n      0x01\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x20\n      dup8\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":15323:15339  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup8\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup8\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup8\n      add\n      mstore\n      dup3\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup8\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup8\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup8\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup8\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup8\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup8\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup8\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup8\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup5\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":14975:14985  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":15378:15422  new_bank_registration.bankAddr == msg.sender */\n      eq\n        /* \"SC_Bank_Registration.sol\":15370:15494  require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\") */\n      tag_15\n      jump\t// in\n    tag_222:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":15513:15559  new_bank_registration.timestamp_response1 != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_223\n      jumpi\n      0x0100\n      dup2\n      add\n      mload\n      tag_225\n      jumpi\n        /* \"SC_Bank_Registration.sol\":15764:15878  require((block.timestamp - new_bank_registration.timestamp_response1) > timeLimit, \"Timelimit not yet exceeded!!\") */\n      tag_178\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":15773:15832  block.timestamp - new_bank_registration.timestamp_response1 */\n      tag_64\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0xc0\n      dup5\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":15773:15788  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":15773:15832  block.timestamp - new_bank_registration.timestamp_response1 */\n      tag_9\n      jump\t// in\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n    tag_225:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x3e\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f647920686173206e6f7420616c7265\n      0x44\n      dup3\n      add\n      mstore\n      0x6164792073656e6420697473207365636f6e6420726573706f6e736521210000\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_223:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x39\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f64792068617320616c726561647920\n      0x44\n      dup3\n      add\n      mstore\n      0x73656e642069747320666972737420726573706f6e7365212100000000000000\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_20:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"SC_Bank_Registration.sol\":9310:9320  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"SC_Bank_Registration.sol\":9295:9363  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_238\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload(keccak256(0x00, 0x40))\n        /* \"SC_Bank_Registration.sol\":9303:9326  bankID[msg.sender] == 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":9295:9363  require(bankID[msg.sender] == 0, \"The bank is already registered!!\") */\n      tag_4\n      jump\t// in\n    tag_238:\n        /* \"SC_Bank_Registration.sol\":9310:9320  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      sload(keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x03)\n        /* \"SC_Bank_Registration.sol\":9460:9607  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_239\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x01\n      iszero(iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n        /* \"SC_Bank_Registration.sol\":9468:9533  bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true */\n      eq\n        /* \"SC_Bank_Registration.sol\":9460:9607  require(bankRegistrationProtocolCurrentlyRuns[_bankRegProtocolID] == true, \"No instance of the bank registration protocol is running at present!!\") */\n      tag_13\n      jump\t// in\n    tag_239:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup1\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":9668:9684  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      0x01c0\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      lt\n      0xffffffffffffffff\n      dup4\n      gt\n      or\n      tag_56\n      jumpi\n        /* \"SC_Bank_Registration.sol\":9715:9839  require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\") */\n      tag_242\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      swap2\n      0x40\n      mstore\n      0xff\n      0x0d\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      sload\n      and\n      swap3\n      dup4\n      dup7\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      0x20\n      dup8\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":9668:9684  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup2\n      add\n      sload\n      0x40\n      dup8\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup8\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup8\n      add\n      mstore\n      dup3\n      0x05\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xa0\n      dup8\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup8\n      add\n      mstore\n      dup3\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0xe0\n      dup8\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup8\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup8\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup8\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup8\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup8\n      add\n      mstore\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x01a0\n      dup5\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":9310:9320  msg.sender */\n      caller\n        /* \"SC_Bank_Registration.sol\":9723:9767  new_bank_registration.bankAddr == msg.sender */\n      eq\n        /* \"SC_Bank_Registration.sol\":9715:9839  require(new_bank_registration.bankAddr == msg.sender, \"Access denied as the bank does not hold the intended bank address!!\") */\n      tag_15\n      jump\t// in\n    tag_242:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":9858:9926  new_bank_registration.timestamp_lock_security_money_by_Reg_Body != 0 */\n      iszero\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      tag_243\n      jumpi\n      0x80\n      dup2\n      add\n      mload\n      tag_245\n      jumpi\n      tag_112\n      swap2\n        /* \"SC_Bank_Registration.sol\":10096:10225  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body <= timeLimit), \"Timelimit exceeded!!\") */\n      tag_248\n        /* \"SC_Bank_Registration.sol\":1340:1351  300 seconds */\n      0x012c\n        /* \"SC_Bank_Registration.sol\":10105:10186  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body */\n      tag_109\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x40\n      dup6\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":10105:10120  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":10105:10186  block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body */\n      tag_9\n      jump\t// in\n        /* \"SC_Bank_Registration.sol\":10096:10225  require((block.timestamp - new_bank_registration.timestamp_lock_security_money_by_Reg_Body <= timeLimit), \"Timelimit exceeded!!\") */\n    tag_248:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      calldataload(0x04)\n      0x60\n      dup4\n      add\n      mstore\n        /* \"SC_Bank_Registration.sol\":10105:10120  block.timestamp */\n      timestamp\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x80\n      dup4\n      add\n      mstore\n      0x00\n      mstore\n        /* \"SC_Bank_Registration.sol\":9668:9684  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      mstore\n      0x0d\n      0x01a0\n      keccak256(0x00, 0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup6\n      sload\n      and\n      or\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n        /* \"SC_Bank_Registration.sol\":9668:9684  bankRegistration */\n      0x02\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup2\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      tag_68\n      0xa0\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x05\n      dup7\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_245:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x5468652062616e6b2068617320616c726561647920636f6d6d69747465642050\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xd8, 0x6f424c2121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_243:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x2e\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x90, 0x656420697473206d6f6e65792121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_18:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"SC_Bank_Registration.sol\":1398:1406  1000 wei */\n      0x03e8\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_50\n      jumpi\n      jump\t// out\n    tag_2:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_50\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_50\n      jumpi\n      swap1\n      calldataload(0x24)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_50\n      jumpi\n      swap1\n      jump\t// out\n        /* \"SC_Bank_Registration.sol\":1710:1959  function isBankIDValid(uint256 _bankID) external view returns(bool)... */\n    tag_3:\n        /* \"SC_Bank_Registration.sol\":1797:1808  _bankID > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"SC_Bank_Registration.sol\":1797:1838  _bankID > 0 && _bankID <= bankIDGenerator */\n      swap1\n      dup2\n      tag_264\n      jumpi\n        /* \"SC_Bank_Registration.sol\":1710:1959  function isBankIDValid(uint256 _bankID) external view returns(bool)... */\n    tag_265:\n      pop\n        /* \"SC_Bank_Registration.sol\":1794:1952  if(_bankID > 0 && _bankID <= bankIDGenerator)... */\n      iszero\n      tag_266\n      jumpi\n        /* \"SC_Bank_Registration.sol\":1871:1875  true */\n      0x01\n        /* \"SC_Bank_Registration.sol\":1864:1876  return(true) */\n      swap1\n      jump\t// out\n        /* \"SC_Bank_Registration.sol\":1794:1952  if(_bankID > 0 && _bankID <= bankIDGenerator)... */\n    tag_266:\n        /* \"SC_Bank_Registration.sol\":1807:1808  0 */\n      0x00\n        /* \"SC_Bank_Registration.sol\":1927:1940  return(false) */\n      swap1\n      jump\t// out\n        /* \"SC_Bank_Registration.sol\":1797:1838  _bankID > 0 && _bankID <= bankIDGenerator */\n    tag_264:\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      swap1\n      pop\n        /* \"SC_Bank_Registration.sol\":1823:1838  bankIDGenerator */\n      0x06\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n      sload\n      lt\n        /* \"SC_Bank_Registration.sol\":1812:1838  _bankID <= bankIDGenerator */\n      iszero\n        /* \"SC_Bank_Registration.sol\":1797:1838  _bankID > 0 && _bankID <= bankIDGenerator */\n      codesize\n      jump(tag_265)\n        /* \"SC_Bank_Registration.sol\":60:18832  contract SC_Bank_Registration ... */\n    tag_4:\n      iszero\n      tag_268\n      jumpi\n      jump\t// out\n    tag_268:\n      0x64\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x20\n      0x24\n      dup3\n      add\n      mstore\n      0x5468652062616e6b20697320616c726561647920726567697374657265642121\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_5:\n      iszero\n      tag_270\n      jumpi\n      jump\t// out\n    tag_270:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x496e636f7272656374206c6f636b696e6720616d6f756e742121000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_6:\n      not(0x00)\n      dup2\n      eq\n      tag_272\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_272:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_8:\n      iszero\n      tag_274\n      jumpi\n      jump\t// out\n    tag_274:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x2a\n      0x24\n      dup3\n      add\n      mstore\n      0x596f7520617265206e6f7420686f6c64696e672074686520696e74656e646564\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x20616464726573732121)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_9:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_272\n      jumpi\n      jump\t// out\n    tag_10:\n      iszero\n      tag_278\n      jumpi\n      jump\t// out\n    tag_278:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x54696d656c696d6974206e6f7420796574206578636565646564212100000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_11:\n      iszero\n      tag_280\n      jumpi\n      jump\t// out\n    tag_280:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x37\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c79207265677561746f727920626f647920686173206163636573732074\n      0x44\n      dup3\n      add\n      mstore\n      0x6f20696e766f6b65207468652066756e6374696f6e2121000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_12:\n      iszero\n      tag_282\n      jumpi\n      jump\t// out\n    tag_282:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x45\n      0x24\n      dup3\n      add\n      mstore\n      0x54686520676976656e2062616e6b206164647265737320697320696e636f7272\n      0x44\n      dup3\n      add\n      mstore\n      0x6563742e205468652062616e6b20697320616c72656164792072656769737465\n      0x64\n      dup3\n      add\n      mstore\n      shl(0xd8, 0x7265642121)\n      0x84\n      dup3\n      add\n      mstore\n      0xa4\n      swap1\n      revert\n    tag_13:\n      iszero\n      tag_284\n      jumpi\n      jump\t// out\n    tag_284:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x45\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f20696e7374616e6365206f66207468652062616e6b207265676973747261\n      0x44\n      dup3\n      add\n      mstore\n      0x74696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573\n      0x64\n      dup3\n      add\n      mstore\n      shl(0xd8, 0x656e742121)\n      0x84\n      dup3\n      add\n      mstore\n      0xa4\n      swap1\n      revert\n    tag_14:\n      iszero\n      tag_286\n      jumpi\n      jump\t// out\n    tag_286:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x54696d656c696d69742065786365656465642121)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_15:\n      iszero\n      tag_288\n      jumpi\n      jump\t// out\n    tag_288:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x43\n      0x24\n      dup3\n      add\n      mstore\n      0x4163636573732064656e696564206173207468652062616e6b20646f6573206e\n      0x44\n      dup3\n      add\n      mstore\n      0x6f7420686f6c642074686520696e74656e6465642062616e6b20616464726573\n      0x64\n      dup3\n      add\n      mstore\n      shl(0xe8, 0x732121)\n      0x84\n      dup3\n      add\n      mstore\n      0xa4\n      swap1\n      revert\n\n    auxdata: 0xa264697066735822122022313535c8bdf0f50267359532506f53198232e049f2a2c3095c6a01cc396fc764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608080604052346100325760006005819055600655600480546001600160a01b0319163317905561205890816100388239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816325ab292e14611bf457508063294a58061461196557806333bcc38814611735578063379cc80d1461144057806345b0f171146114225780635013ad87146113f957806362f595011461111b57806375e5a87114610df05780639cfd369914610db65780639ec802ff14610d8e578063bbd9f9b114610b48578063c08d1fe514610b2b578063c5fe01e414610816578063d1706b6c146104815763f93be9e3146100c457600080fd5b3461047c57602036600319011261047c576100dd611c0f565b6100f260018060a01b03600454163314611def565b60018060a01b038116600052600060205261011260406000205415611e61565b60018060a01b038116600052600160205260406000205490816000526003602052610149600160ff60406000205416151514611ee1565b816000526002602052604060002090604051916101c083019183831067ffffffffffffffff8411176104665761022c9260405260ff600d60018060a01b03845416938487526001810154602088015260028101546040880152600381015460608801526004810154608088015282600582015416151560a0880152600681015460c088015282600782015416151560e088015260088101546101008801526009810154610120880152600a810154610140880152600b810154610160880152600c81015461018088015201541615156101a085015260018060a01b031614611d37565b60408101511561040a57608081015161039f5761025961012c610253604084015142611d96565b11611da3565b6107d0916000808080863382f1156103935761037f926000610120840152610160830152426101408301524261018083015260016101a08301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60c0810151600685015561033160e08201511515600786019060ff801983541691151516179055565b61010081015160088501556101208101516009850155610140810151600a850155610160810151600b850155610180810151600c8501550151151591019060ff801983541691151516179055565b60036020526040600020805460ff19169055005b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152603f60248201527f54686520637573746f6d65722068617320616c726561647920636f6d6d69746560448201527f6420666f7220746865206163636f756e7420696e666f726d6174696f6e2121006064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b60448201526d656420746865206d6f6e6579212160901b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b3461047c5761048f36611c25565b6104a460018060a01b03600454163314611def565b60018060a01b03821660005260006020526104c460406000205415611e61565b60018060a01b03821660005260016020526040600020548060005260036020526104fa600160ff60406000205416151514611ee1565b806000526002602052604060002091604051926101c0840184811067ffffffffffffffff8211176104665760405260018060a01b0381541684526001810154602085015260028101546040850152600381015460608501526004810154608085015260ff600582015416151560a0850152600681015460c085015260ff600782015416151560e085015260ff600d600883015492836101008801526009810154610120880152600a810154610140880152600b810154610160880152600c81015461018088015201541615156101a08501526107b45760c0830151156107375761012c6105eb60c085015142611d96565b116106fd57151560e0830181905242610100840152926103e86000808080846001600160a01b03871682f115610393576000808080843382f1156103935761037f94816001926101208701526101608601524261014086015242610180860152146000146106ef5761065e600654611d12565b908160065560018060a01b031660005260006020526040600020555b6000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b5060016101a083015261067a565b60405162461bcd60e51b8152602060048201526012602482015271151a5b595b1a5b5a5d08195e18d95959195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152604960248201527f54686520726567756c61746f727920626f6479206d7573742070726f7669646560448201527f2069747320726573706f6e736531206265666f72652073656e64696e6720726560648201526873706f6e736532212160b81b608482015260a490fd5b60405162461bcd60e51b815260206004820152603460248201527f54686520726567756c61746f727920626f64792068617320616c72656164792060448201527373656e642069747320726573706f6e736532212160601b6064820152608490fd5b3461047c5761082436611c25565b61083960018060a01b03600454163314611def565b60018060a01b038216600052600060205261085960406000205415611e61565b60018060a01b038216600052600160205260406000205491826000526003602052610890600160ff60406000205416151514611ee1565b826000526002602052604060002091604051926101c0840184811067ffffffffffffffff8211176104665760405260018060a01b03815416845260018101546020850152600281015460408501526003810154606085015260ff600d60048301549283608088015282600582015416151560a0880152600681015460c088015282600782015416151560e088015260088101546101008801526009810154610120880152600a810154610140880152600b810154610160880152600c81015461018088015201541615156101a085015215610ae65760c0830151610a885761098961012c610982608086015142611d96565b1115611f61565b15801560a08401524260c0840152610a18575b50610a16916000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b005b600080806103e8819460018060a01b031682f1156103935760008080806103e83382f11561039357610a16916103e86101208301526103e8610160830152426101408301524261018083015260016101a0830152806000526003602052604060002060ff1981541690559161099c565b60405162461bcd60e51b815260206004820152603060248201527f54686520726567756c61746f727920626f647920616c72656164792073656e6460448201526f2069747320726573706f6e736531212160801b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5468652062616e6b206e6f742079657420636f6d6d69747465642121000000006044820152606490fd5b3461047c57600036600319011261047c57602060405161012c8152f35b600036600319011261047c57336000526000602052610b6c60406000205415611c7b565b336000526001602052604060002054600052600360205260ff60406000205416610d0f57610b9d6103e83414611cc6565b610ba8600554611d12565b8060055533600052600160205280604060002055806000526002602052604060002090604051906101c082019282841067ffffffffffffffff85111761046657600d60ff91610cf89560405260028101546040860152600381015460608601526004810154608086015282600582015416151560a0860152600681015460c086015282600782015416151560e086015260088101546101008601526009810154610120860152600a810154610140860152600b810154610160860152600c81015461018086015201541615156101a08301523382524260208301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60036020526040600020805460ff19166001179055005b60405162461bcd60e51b815260206004820152604b60248201527f50726576696f757320696e7374616e6365206f66207468652062616e6b20726560448201527f67697374726174696f6e2070726f746f636f6c206973206e6f7420796574207460648201526a65726d696e61746564212160a81b608482015260a490fd5b3461047c57602036600319011261047c576020610dac600435611c54565b6040519015158152f35b3461047c57602036600319011261047c576001600160a01b03610dd7611c0f565b1660005260006020526020604060002054604051908152f35b602036600319011261047c57610e04611c0f565b610e1960018060a01b03600454163314611def565b60018060a01b0381166000526000602052610e3960406000205415611e61565b610e466103e83414611cc6565b60018060a01b038116600052600160205260406000205490816000526003602052610e7d600160ff60406000205416151514611ee1565b8160005260026020526040600020604051916101c0830183811067ffffffffffffffff8211176104665760405260ff600d60018060a01b03845416938486526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a084015260018060a01b0316036110b05760208101511561105f576040810151610fff57610a1691610f8461012c610982602085015142611d96565b4260408301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152603260248201527f54686520726567756c61746f727920626f64792068617320616c7265616479206044820152716c6f636b656420697473206d6f6e6579212160701b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5468652062616e6b206e6f7420796574206c6f636b656420697473206d6f6e6560448201526279212160e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152603960248201527f4163636573732064656e6965642061732074686520676976656e2062616e6b2060448201527f61646472657373206973206e6f7420696e74656e6465642121000000000000006064820152608490fd5b3461047c57600036600319011261047c5733600052600060205261114460406000205415611c7b565b336000526001602052604060002054806000526003602052611172600160ff60406000205416151514611ee1565b8060005260026020526040600020604051906101c082019082821067ffffffffffffffff8311176104665761124d9160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611fa4565b60808101511561138e5760c08101516113235761127461012c610253608084015142611d96565b6107d0916000808080863382f1156103935761037f926101208301526000610160830152426101408301524261018083015260016101a08301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152603d60248201527f54686520726567756c61746f727920626f647920686173206e6f7420616c726560448201527f6164792073656e642069747320666972737420726573706f6e736521210000006064820152608490fd5b60405162461bcd60e51b815260206004820152603760248201527f5468652062616e6b206e6f742079657420636f6d6d6974656420666f7220746860448201527f65206163636f756e7420696e666f726d6174696f6e21210000000000000000006064820152608490fd5b3461047c57600036600319011261047c576004546040516001600160a01b039091168152602090f35b3461047c57600036600319011261047c576020600554604051908152f35b3461047c57600036600319011261047c5733600052600060205261146960406000205415611c7b565b336000526001602052604060002054806000526003602052600160ff604060002054161515036116e6578060005260026020526040600020604051906101c082019082821067ffffffffffffffff8311176104665761156e9160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611d37565b6020810151156116955760408101516116355761159561012c610253602084015142611d96565b6103e8916000808080863382f1156103935761037f926101208301524261014083015260016101a08301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152603260248201527f54686520526567756c61746f727920626f64792068617320616c7265616479206044820152716c6f636b656420697473206d6f6e6579212160701b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5468652062616e6b206e6f7420796574206c6f636b656420746865206d6f6e6560448201526279212160e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f5468652070726f746f636f6c206973206e6f74207965742073746172746564216044820152602160f81b6064820152608490fd5b3461047c57600036600319011261047c5733600052600060205261175e60406000205415611c7b565b33600052600160205260406000205480600052600360205261178c600160ff60406000205416151514611ee1565b8060005260026020526040600020604051906101c082019082821067ffffffffffffffff831117610466576118679160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611fa4565b60c0810151156118fa5761010081015161188f5761127461012c61025360c084015142611d96565b60405162461bcd60e51b815260206004820152603e60248201527f54686520726567756c61746f727920626f647920686173206e6f7420616c726560448201527f6164792073656e6420697473207365636f6e6420726573706f6e7365212100006064820152608490fd5b60405162461bcd60e51b815260206004820152603960248201527f54686520726567756c61746f727920626f64792068617320616c72656164792060448201527f73656e642069747320666972737420726573706f6e73652121000000000000006064820152608490fd5b3461047c57602036600319011261047c5733600052600060205261198e60406000205415611c7b565b3360005260016020526040600020548060005260036020526119bc600160ff60406000205416151514611ee1565b8060005260026020526040600020604051906101c082019082821067ffffffffffffffff83111761046657611a979160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611fa4565b604081015115611b98576080810151611b4557610a1691611ac261012c610982604085015142611d96565b60043560608301524260808301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152602560248201527f5468652062616e6b2068617320616c726561647920636f6d6d697474656420506044820152646f424c212160d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b60448201526d656420697473206d6f6e6579212160901b6064820152608490fd5b3461047c57600036600319011261047c57806103e860209252f35b600435906001600160a01b038216820361047c57565b604090600319011261047c576004356001600160a01b038116810361047c5790602435801515810361047c5790565b8015159081611c6e575b5015611c6957600190565b600090565b9050600654101538611c5e565b15611c8257565b606460405162461bcd60e51b815260206004820152602060248201527f5468652062616e6b20697320616c7265616479207265676973746572656421216044820152fd5b15611ccd57565b60405162461bcd60e51b815260206004820152601a60248201527f496e636f7272656374206c6f636b696e6720616d6f756e7421210000000000006044820152606490fd5b6000198114611d215760010190565b634e487b7160e01b600052601160045260246000fd5b15611d3e57565b60405162461bcd60e51b815260206004820152602a60248201527f596f7520617265206e6f7420686f6c64696e672074686520696e74656e6465646044820152692061646472657373212160b01b6064820152608490fd5b91908203918211611d2157565b15611daa57565b60405162461bcd60e51b815260206004820152601c60248201527f54696d656c696d6974206e6f74207965742065786365656465642121000000006044820152606490fd5b15611df657565b60405162461bcd60e51b815260206004820152603760248201527f4f6e6c79207265677561746f727920626f64792068617320616363657373207460448201527f6f20696e766f6b65207468652066756e6374696f6e21210000000000000000006064820152608490fd5b15611e6857565b60405162461bcd60e51b815260206004820152604560248201527f54686520676976656e2062616e6b206164647265737320697320696e636f727260448201527f6563742e205468652062616e6b20697320616c72656164792072656769737465606482015264726564212160d81b608482015260a490fd5b15611ee857565b60405162461bcd60e51b815260206004820152604560248201527f4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726160448201527f74696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573606482015264656e74212160d81b608482015260a490fd5b15611f6857565b60405162461bcd60e51b815260206004820152601460248201527354696d656c696d6974206578636565646564212160601b6044820152606490fd5b15611fab57565b60405162461bcd60e51b815260206004820152604360248201527f4163636573732064656e696564206173207468652062616e6b20646f6573206e60448201527f6f7420686f6c642074686520696e74656e6465642062616e6b2061646472657360648201526273212160e81b608482015260a490fdfea264697066735822122022313535c8bdf0f50267359532506f53198232e049f2a2c3095c6a01cc396fc764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x32 JUMPI PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2058 SWAP1 DUP2 PUSH2 0x38 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x25AB292E EQ PUSH2 0x1BF4 JUMPI POP DUP1 PUSH4 0x294A5806 EQ PUSH2 0x1965 JUMPI DUP1 PUSH4 0x33BCC388 EQ PUSH2 0x1735 JUMPI DUP1 PUSH4 0x379CC80D EQ PUSH2 0x1440 JUMPI DUP1 PUSH4 0x45B0F171 EQ PUSH2 0x1422 JUMPI DUP1 PUSH4 0x5013AD87 EQ PUSH2 0x13F9 JUMPI DUP1 PUSH4 0x62F59501 EQ PUSH2 0x111B JUMPI DUP1 PUSH4 0x75E5A871 EQ PUSH2 0xDF0 JUMPI DUP1 PUSH4 0x9CFD3699 EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0x9EC802FF EQ PUSH2 0xD8E JUMPI DUP1 PUSH4 0xBBD9F9B1 EQ PUSH2 0xB48 JUMPI DUP1 PUSH4 0xC08D1FE5 EQ PUSH2 0xB2B JUMPI DUP1 PUSH4 0xC5FE01E4 EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0xD1706B6C EQ PUSH2 0x481 JUMPI PUSH4 0xF93BE9E3 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH2 0xDD PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0xF2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x112 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x149 PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1C0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x466 JUMPI PUSH2 0x22C SWAP3 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 DUP5 DUP8 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP9 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP9 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP9 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP9 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x40A JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x39F JUMPI PUSH2 0x259 PUSH2 0x12C PUSH2 0x253 PUSH1 0x40 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST GT PUSH2 0x1DA3 JUMP JUMPDEST PUSH2 0x7D0 SWAP2 PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP3 PUSH1 0x0 PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x331 PUSH1 0xE0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x7 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xB DUP6 ADD SSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0xC DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520637573746F6D65722068617320616C726561647920636F6D6D697465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420666F7220746865206163636F756E7420696E666F726D6174696F6E212100 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F6479206E6F7420796574206C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x656420746865206D6F6E65792121 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH2 0x48F CALLDATASIZE PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x4C4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x4FA PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1C0 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x466 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x8 DUP4 ADD SLOAD SWAP3 DUP4 PUSH2 0x100 DUP9 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP9 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP9 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x7B4 JUMPI PUSH1 0xC0 DUP4 ADD MLOAD ISZERO PUSH2 0x737 JUMPI PUSH2 0x12C PUSH2 0x5EB PUSH1 0xC0 DUP6 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST GT PUSH2 0x6FD JUMPI ISZERO ISZERO PUSH1 0xE0 DUP4 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH2 0x100 DUP5 ADD MSTORE SWAP3 PUSH2 0x3E8 PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP5 DUP2 PUSH1 0x1 SWAP3 PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP7 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP7 ADD MSTORE EQ PUSH1 0x0 EQ PUSH2 0x6EF JUMPI PUSH2 0x65E PUSH1 0x6 SLOAD PUSH2 0x1D12 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151A5B595B1A5B5A5D08195E18D959591959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F6479206D7573742070726F76696465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2069747320726573706F6E736531206265666F72652073656E64696E67207265 PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x73706F6E7365322121 PUSH1 0xB8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x73656E642069747320726573706F6E7365322121 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH2 0x824 CALLDATASIZE PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x839 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x859 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x890 PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1C0 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x466 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x4 DUP4 ADD SLOAD SWAP3 DUP4 PUSH1 0x80 DUP9 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP9 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP9 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP9 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE ISZERO PUSH2 0xAE6 JUMPI PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0xA88 JUMPI PUSH2 0x989 PUSH2 0x12C PUSH2 0x982 PUSH1 0x80 DUP7 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST GT ISZERO PUSH2 0x1F61 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH1 0xA0 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0xA18 JUMPI JUMPDEST POP PUSH2 0xA16 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x3E8 DUP2 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x3E8 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0xA16 SWAP2 PUSH2 0x3E8 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x3E8 PUSH2 0x160 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE SWAP2 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F647920616C72656164792073656E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x2069747320726573706F6E7365312121 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F742079657420636F6D6D6974746564212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x12C DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xB6C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xD0F JUMPI PUSH2 0xB9D PUSH2 0x3E8 CALLVALUE EQ PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0xBA8 PUSH1 0x5 SLOAD PUSH2 0x1D12 JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x466 JUMPI PUSH1 0xD PUSH1 0xFF SWAP2 PUSH2 0xCF8 SWAP6 PUSH1 0x40 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE CALLER DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F757320696E7374616E6365206F66207468652062616E6B207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67697374726174696F6E2070726F746F636F6C206973206E6F74207965742074 PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x65726D696E617465642121 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x20 PUSH2 0xDAC PUSH1 0x4 CALLDATALOAD PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xDD7 PUSH2 0x1C0F JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH2 0xE04 PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0xE19 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xE39 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0xE46 PUSH2 0x3E8 CALLVALUE EQ PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xE7D PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1C0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x466 JUMPI PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 DUP5 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x10B0 JUMPI PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x105F JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xFFF JUMPI PUSH2 0xA16 SWAP2 PUSH2 0xF84 PUSH2 0x12C PUSH2 0x982 PUSH1 0x20 DUP6 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6C6F636B656420697473206D6F6E65792121 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F7420796574206C6F636B656420697473206D6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x792121 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636573732064656E6965642061732074686520676976656E2062616E6B20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61646472657373206973206E6F7420696E74656E646564212100000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1144 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1172 PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x124D SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x138E JUMPI PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1323 JUMPI PUSH2 0x1274 PUSH2 0x12C PUSH2 0x253 PUSH1 0x80 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x7D0 SWAP2 PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP3 PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F647920686173206E6F7420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6164792073656E642069747320666972737420726573706F6E73652121000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F742079657420636F6D6D6974656420666F72207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206163636F756E7420696E666F726D6174696F6E2121000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1469 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO SUB PUSH2 0x16E6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x156E SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x1695 JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1635 JUMPI PUSH2 0x1595 PUSH2 0x12C PUSH2 0x253 PUSH1 0x20 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x3E8 SWAP2 PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP3 PUSH2 0x120 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520526567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6C6F636B656420697473206D6F6E65792121 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F7420796574206C6F636B656420746865206D6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x792121 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F746F636F6C206973206E6F7420796574207374617274656421 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x175E PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x178C PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x1867 SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD ISZERO PUSH2 0x18FA JUMPI PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x188F JUMPI PUSH2 0x1274 PUSH2 0x12C PUSH2 0x253 PUSH1 0xC0 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F647920686173206E6F7420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6164792073656E6420697473207365636F6E6420726573706F6E736521210000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73656E642069747320666972737420726573706F6E7365212100000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x198E PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x19BC PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x1A97 SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x1B45 JUMPI PUSH2 0xA16 SWAP2 PUSH2 0x1AC2 PUSH2 0x12C PUSH2 0x982 PUSH1 0x40 DUP6 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B2068617320616C726561647920636F6D6D69747465642050 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F424C2121 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F6479206E6F7420796574206C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x656420697473206D6F6E65792121 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI DUP1 PUSH2 0x3E8 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x47C JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x47C JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x47C JUMPI SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1C6E JUMPI JUMPDEST POP ISZERO PUSH2 0x1C69 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD LT ISZERO CODESIZE PUSH2 0x1C5E JUMP JUMPDEST ISZERO PUSH2 0x1C82 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B20697320616C726561647920726567697374657265642121 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1CCD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374206C6F636B696E6720616D6F756E742121000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D21 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1D3E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420686F6C64696E672074686520696E74656E646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20616464726573732121 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1D21 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1DAA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54696D656C696D6974206E6F7420796574206578636565646564212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DF6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207265677561746F727920626F647920686173206163636573732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F20696E766F6B65207468652066756E6374696F6E2121000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520676976656E2062616E6B206164647265737320697320696E636F7272 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563742E205468652062616E6B20697320616C72656164792072656769737465 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x7265642121 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20696E7374616E6365206F66207468652062616E6B207265676973747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696F6E2070726F746F636F6C2069732072756E6E696E672061742070726573 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x656E742121 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x54696D656C696D69742065786365656465642121 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FAB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636573732064656E696564206173207468652062616E6B20646F6573206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7420686F6C642074686520696E74656E6465642062616E6B20616464726573 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x732121 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 BALANCE CALLDATALOAD CALLDATALOAD 0xC8 0xBD CREATE CREATE2 MUL PUSH8 0x359532506F531982 ORIGIN 0xE0 0x49 CALLCODE LOG2 0xC3 MULMOD 0x5C PUSH11 0x1CC396FC764736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "60:18772:0:-:0;;;;;;;1296:1;;60:18772;;;1439:1;60:18772;1480:28;60:18772;;-1:-1:-1;;;;;;60:18772:0;1498:10;60:18772;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_bool": {
									"entryPoint": 7205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"checked_sub_uint256": {
									"entryPoint": 7574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_isBankIDValid": {
									"entryPoint": 7252,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_uint256": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_2dd4": {
									"entryPoint": 7777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_58dd": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_68b5": {
									"entryPoint": 8033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_8d8b": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_8f05": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_b4d5": {
									"entryPoint": 7905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cb8b": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f9b8": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_storage_value_offsett_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608080604052600436101561001357600080fd5b60003560e01c90816325ab292e14611bf457508063294a58061461196557806333bcc38814611735578063379cc80d1461144057806345b0f171146114225780635013ad87146113f957806362f595011461111b57806375e5a87114610df05780639cfd369914610db65780639ec802ff14610d8e578063bbd9f9b114610b48578063c08d1fe514610b2b578063c5fe01e414610816578063d1706b6c146104815763f93be9e3146100c457600080fd5b3461047c57602036600319011261047c576100dd611c0f565b6100f260018060a01b03600454163314611def565b60018060a01b038116600052600060205261011260406000205415611e61565b60018060a01b038116600052600160205260406000205490816000526003602052610149600160ff60406000205416151514611ee1565b816000526002602052604060002090604051916101c083019183831067ffffffffffffffff8411176104665761022c9260405260ff600d60018060a01b03845416938487526001810154602088015260028101546040880152600381015460608801526004810154608088015282600582015416151560a0880152600681015460c088015282600782015416151560e088015260088101546101008801526009810154610120880152600a810154610140880152600b810154610160880152600c81015461018088015201541615156101a085015260018060a01b031614611d37565b60408101511561040a57608081015161039f5761025961012c610253604084015142611d96565b11611da3565b6107d0916000808080863382f1156103935761037f926000610120840152610160830152426101408301524261018083015260016101a08301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60c0810151600685015561033160e08201511515600786019060ff801983541691151516179055565b61010081015160088501556101208101516009850155610140810151600a850155610160810151600b850155610180810151600c8501550151151591019060ff801983541691151516179055565b60036020526040600020805460ff19169055005b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152603f60248201527f54686520637573746f6d65722068617320616c726561647920636f6d6d69746560448201527f6420666f7220746865206163636f756e7420696e666f726d6174696f6e2121006064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b60448201526d656420746865206d6f6e6579212160901b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b3461047c5761048f36611c25565b6104a460018060a01b03600454163314611def565b60018060a01b03821660005260006020526104c460406000205415611e61565b60018060a01b03821660005260016020526040600020548060005260036020526104fa600160ff60406000205416151514611ee1565b806000526002602052604060002091604051926101c0840184811067ffffffffffffffff8211176104665760405260018060a01b0381541684526001810154602085015260028101546040850152600381015460608501526004810154608085015260ff600582015416151560a0850152600681015460c085015260ff600782015416151560e085015260ff600d600883015492836101008801526009810154610120880152600a810154610140880152600b810154610160880152600c81015461018088015201541615156101a08501526107b45760c0830151156107375761012c6105eb60c085015142611d96565b116106fd57151560e0830181905242610100840152926103e86000808080846001600160a01b03871682f115610393576000808080843382f1156103935761037f94816001926101208701526101608601524261014086015242610180860152146000146106ef5761065e600654611d12565b908160065560018060a01b031660005260006020526040600020555b6000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b5060016101a083015261067a565b60405162461bcd60e51b8152602060048201526012602482015271151a5b595b1a5b5a5d08195e18d95959195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152604960248201527f54686520726567756c61746f727920626f6479206d7573742070726f7669646560448201527f2069747320726573706f6e736531206265666f72652073656e64696e6720726560648201526873706f6e736532212160b81b608482015260a490fd5b60405162461bcd60e51b815260206004820152603460248201527f54686520726567756c61746f727920626f64792068617320616c72656164792060448201527373656e642069747320726573706f6e736532212160601b6064820152608490fd5b3461047c5761082436611c25565b61083960018060a01b03600454163314611def565b60018060a01b038216600052600060205261085960406000205415611e61565b60018060a01b038216600052600160205260406000205491826000526003602052610890600160ff60406000205416151514611ee1565b826000526002602052604060002091604051926101c0840184811067ffffffffffffffff8211176104665760405260018060a01b03815416845260018101546020850152600281015460408501526003810154606085015260ff600d60048301549283608088015282600582015416151560a0880152600681015460c088015282600782015416151560e088015260088101546101008801526009810154610120880152600a810154610140880152600b810154610160880152600c81015461018088015201541615156101a085015215610ae65760c0830151610a885761098961012c610982608086015142611d96565b1115611f61565b15801560a08401524260c0840152610a18575b50610a16916000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b005b600080806103e8819460018060a01b031682f1156103935760008080806103e83382f11561039357610a16916103e86101208301526103e8610160830152426101408301524261018083015260016101a0830152806000526003602052604060002060ff1981541690559161099c565b60405162461bcd60e51b815260206004820152603060248201527f54686520726567756c61746f727920626f647920616c72656164792073656e6460448201526f2069747320726573706f6e736531212160801b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5468652062616e6b206e6f742079657420636f6d6d69747465642121000000006044820152606490fd5b3461047c57600036600319011261047c57602060405161012c8152f35b600036600319011261047c57336000526000602052610b6c60406000205415611c7b565b336000526001602052604060002054600052600360205260ff60406000205416610d0f57610b9d6103e83414611cc6565b610ba8600554611d12565b8060055533600052600160205280604060002055806000526002602052604060002090604051906101c082019282841067ffffffffffffffff85111761046657600d60ff91610cf89560405260028101546040860152600381015460608601526004810154608086015282600582015416151560a0860152600681015460c086015282600782015416151560e086015260088101546101008601526009810154610120860152600a810154610140860152600b810154610160860152600c81015461018086015201541615156101a08301523382524260208301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60036020526040600020805460ff19166001179055005b60405162461bcd60e51b815260206004820152604b60248201527f50726576696f757320696e7374616e6365206f66207468652062616e6b20726560448201527f67697374726174696f6e2070726f746f636f6c206973206e6f7420796574207460648201526a65726d696e61746564212160a81b608482015260a490fd5b3461047c57602036600319011261047c576020610dac600435611c54565b6040519015158152f35b3461047c57602036600319011261047c576001600160a01b03610dd7611c0f565b1660005260006020526020604060002054604051908152f35b602036600319011261047c57610e04611c0f565b610e1960018060a01b03600454163314611def565b60018060a01b0381166000526000602052610e3960406000205415611e61565b610e466103e83414611cc6565b60018060a01b038116600052600160205260406000205490816000526003602052610e7d600160ff60406000205416151514611ee1565b8160005260026020526040600020604051916101c0830183811067ffffffffffffffff8211176104665760405260ff600d60018060a01b03845416938486526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a084015260018060a01b0316036110b05760208101511561105f576040810151610fff57610a1691610f8461012c610982602085015142611d96565b4260408301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152603260248201527f54686520726567756c61746f727920626f64792068617320616c7265616479206044820152716c6f636b656420697473206d6f6e6579212160701b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5468652062616e6b206e6f7420796574206c6f636b656420697473206d6f6e6560448201526279212160e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152603960248201527f4163636573732064656e6965642061732074686520676976656e2062616e6b2060448201527f61646472657373206973206e6f7420696e74656e6465642121000000000000006064820152608490fd5b3461047c57600036600319011261047c5733600052600060205261114460406000205415611c7b565b336000526001602052604060002054806000526003602052611172600160ff60406000205416151514611ee1565b8060005260026020526040600020604051906101c082019082821067ffffffffffffffff8311176104665761124d9160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611fa4565b60808101511561138e5760c08101516113235761127461012c610253608084015142611d96565b6107d0916000808080863382f1156103935761037f926101208301526000610160830152426101408301524261018083015260016101a08301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152603d60248201527f54686520726567756c61746f727920626f647920686173206e6f7420616c726560448201527f6164792073656e642069747320666972737420726573706f6e736521210000006064820152608490fd5b60405162461bcd60e51b815260206004820152603760248201527f5468652062616e6b206e6f742079657420636f6d6d6974656420666f7220746860448201527f65206163636f756e7420696e666f726d6174696f6e21210000000000000000006064820152608490fd5b3461047c57600036600319011261047c576004546040516001600160a01b039091168152602090f35b3461047c57600036600319011261047c576020600554604051908152f35b3461047c57600036600319011261047c5733600052600060205261146960406000205415611c7b565b336000526001602052604060002054806000526003602052600160ff604060002054161515036116e6578060005260026020526040600020604051906101c082019082821067ffffffffffffffff8311176104665761156e9160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611d37565b6020810151156116955760408101516116355761159561012c610253602084015142611d96565b6103e8916000808080863382f1156103935761037f926101208301524261014083015260016101a08301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152603260248201527f54686520526567756c61746f727920626f64792068617320616c7265616479206044820152716c6f636b656420697473206d6f6e6579212160701b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5468652062616e6b206e6f7420796574206c6f636b656420746865206d6f6e6560448201526279212160e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f5468652070726f746f636f6c206973206e6f74207965742073746172746564216044820152602160f81b6064820152608490fd5b3461047c57600036600319011261047c5733600052600060205261175e60406000205415611c7b565b33600052600160205260406000205480600052600360205261178c600160ff60406000205416151514611ee1565b8060005260026020526040600020604051906101c082019082821067ffffffffffffffff831117610466576118679160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611fa4565b60c0810151156118fa5761010081015161188f5761127461012c61025360c084015142611d96565b60405162461bcd60e51b815260206004820152603e60248201527f54686520726567756c61746f727920626f647920686173206e6f7420616c726560448201527f6164792073656e6420697473207365636f6e6420726573706f6e7365212100006064820152608490fd5b60405162461bcd60e51b815260206004820152603960248201527f54686520726567756c61746f727920626f64792068617320616c72656164792060448201527f73656e642069747320666972737420726573706f6e73652121000000000000006064820152608490fd5b3461047c57602036600319011261047c5733600052600060205261198e60406000205415611c7b565b3360005260016020526040600020548060005260036020526119bc600160ff60406000205416151514611ee1565b8060005260026020526040600020604051906101c082019082821067ffffffffffffffff83111761046657611a979160405260ff600d60018060a01b03835416928386526001810154602087015260028101546040870152600381015460608701526004810154608087015282600582015416151560a0870152600681015460c087015282600782015416151560e087015260088101546101008701526009810154610120870152600a810154610140870152600b810154610160870152600c81015461018087015201541615156101a08401523314611fa4565b604081015115611b98576080810151611b4557610a1691611ac261012c610982604085015142611d96565b60043560608301524260808301526000526002602052600d6101a060406000209260018060a01b038151166001600160601b0360a01b8554161784556020810151600185015560408101516002850155606081015160038501556080810151600485015561030860a08201511515600586019060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152602560248201527f5468652062616e6b2068617320616c726561647920636f6d6d697474656420506044820152646f424c212160d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b60448201526d656420697473206d6f6e6579212160901b6064820152608490fd5b3461047c57600036600319011261047c57806103e860209252f35b600435906001600160a01b038216820361047c57565b604090600319011261047c576004356001600160a01b038116810361047c5790602435801515810361047c5790565b8015159081611c6e575b5015611c6957600190565b600090565b9050600654101538611c5e565b15611c8257565b606460405162461bcd60e51b815260206004820152602060248201527f5468652062616e6b20697320616c7265616479207265676973746572656421216044820152fd5b15611ccd57565b60405162461bcd60e51b815260206004820152601a60248201527f496e636f7272656374206c6f636b696e6720616d6f756e7421210000000000006044820152606490fd5b6000198114611d215760010190565b634e487b7160e01b600052601160045260246000fd5b15611d3e57565b60405162461bcd60e51b815260206004820152602a60248201527f596f7520617265206e6f7420686f6c64696e672074686520696e74656e6465646044820152692061646472657373212160b01b6064820152608490fd5b91908203918211611d2157565b15611daa57565b60405162461bcd60e51b815260206004820152601c60248201527f54696d656c696d6974206e6f74207965742065786365656465642121000000006044820152606490fd5b15611df657565b60405162461bcd60e51b815260206004820152603760248201527f4f6e6c79207265677561746f727920626f64792068617320616363657373207460448201527f6f20696e766f6b65207468652066756e6374696f6e21210000000000000000006064820152608490fd5b15611e6857565b60405162461bcd60e51b815260206004820152604560248201527f54686520676976656e2062616e6b206164647265737320697320696e636f727260448201527f6563742e205468652062616e6b20697320616c72656164792072656769737465606482015264726564212160d81b608482015260a490fd5b15611ee857565b60405162461bcd60e51b815260206004820152604560248201527f4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726160448201527f74696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573606482015264656e74212160d81b608482015260a490fd5b15611f6857565b60405162461bcd60e51b815260206004820152601460248201527354696d656c696d6974206578636565646564212160601b6044820152606490fd5b15611fab57565b60405162461bcd60e51b815260206004820152604360248201527f4163636573732064656e696564206173207468652062616e6b20646f6573206e60448201527f6f7420686f6c642074686520696e74656e6465642062616e6b2061646472657360648201526273212160e81b608482015260a490fdfea264697066735822122022313535c8bdf0f50267359532506f53198232e049f2a2c3095c6a01cc396fc764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x25AB292E EQ PUSH2 0x1BF4 JUMPI POP DUP1 PUSH4 0x294A5806 EQ PUSH2 0x1965 JUMPI DUP1 PUSH4 0x33BCC388 EQ PUSH2 0x1735 JUMPI DUP1 PUSH4 0x379CC80D EQ PUSH2 0x1440 JUMPI DUP1 PUSH4 0x45B0F171 EQ PUSH2 0x1422 JUMPI DUP1 PUSH4 0x5013AD87 EQ PUSH2 0x13F9 JUMPI DUP1 PUSH4 0x62F59501 EQ PUSH2 0x111B JUMPI DUP1 PUSH4 0x75E5A871 EQ PUSH2 0xDF0 JUMPI DUP1 PUSH4 0x9CFD3699 EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0x9EC802FF EQ PUSH2 0xD8E JUMPI DUP1 PUSH4 0xBBD9F9B1 EQ PUSH2 0xB48 JUMPI DUP1 PUSH4 0xC08D1FE5 EQ PUSH2 0xB2B JUMPI DUP1 PUSH4 0xC5FE01E4 EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0xD1706B6C EQ PUSH2 0x481 JUMPI PUSH4 0xF93BE9E3 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH2 0xDD PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0xF2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x112 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x149 PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1C0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x466 JUMPI PUSH2 0x22C SWAP3 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 DUP5 DUP8 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP9 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP9 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP9 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP9 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x40A JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x39F JUMPI PUSH2 0x259 PUSH2 0x12C PUSH2 0x253 PUSH1 0x40 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST GT PUSH2 0x1DA3 JUMP JUMPDEST PUSH2 0x7D0 SWAP2 PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP3 PUSH1 0x0 PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x331 PUSH1 0xE0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x7 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xB DUP6 ADD SSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0xC DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520637573746F6D65722068617320616C726561647920636F6D6D697465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420666F7220746865206163636F756E7420696E666F726D6174696F6E212100 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F6479206E6F7420796574206C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x656420746865206D6F6E65792121 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH2 0x48F CALLDATASIZE PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x4C4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x4FA PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1C0 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x466 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x8 DUP4 ADD SLOAD SWAP3 DUP4 PUSH2 0x100 DUP9 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP9 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP9 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x7B4 JUMPI PUSH1 0xC0 DUP4 ADD MLOAD ISZERO PUSH2 0x737 JUMPI PUSH2 0x12C PUSH2 0x5EB PUSH1 0xC0 DUP6 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST GT PUSH2 0x6FD JUMPI ISZERO ISZERO PUSH1 0xE0 DUP4 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH2 0x100 DUP5 ADD MSTORE SWAP3 PUSH2 0x3E8 PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP5 DUP2 PUSH1 0x1 SWAP3 PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP7 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP7 ADD MSTORE EQ PUSH1 0x0 EQ PUSH2 0x6EF JUMPI PUSH2 0x65E PUSH1 0x6 SLOAD PUSH2 0x1D12 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151A5B595B1A5B5A5D08195E18D959591959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F6479206D7573742070726F76696465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2069747320726573706F6E736531206265666F72652073656E64696E67207265 PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x73706F6E7365322121 PUSH1 0xB8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x73656E642069747320726573706F6E7365322121 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH2 0x824 CALLDATASIZE PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x839 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x859 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x890 PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1C0 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x466 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x4 DUP4 ADD SLOAD SWAP3 DUP4 PUSH1 0x80 DUP9 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP9 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP9 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP9 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE ISZERO PUSH2 0xAE6 JUMPI PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0xA88 JUMPI PUSH2 0x989 PUSH2 0x12C PUSH2 0x982 PUSH1 0x80 DUP7 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST GT ISZERO PUSH2 0x1F61 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH1 0xA0 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0xA18 JUMPI JUMPDEST POP PUSH2 0xA16 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x3E8 DUP2 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x3E8 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0xA16 SWAP2 PUSH2 0x3E8 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x3E8 PUSH2 0x160 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE SWAP2 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F647920616C72656164792073656E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x2069747320726573706F6E7365312121 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F742079657420636F6D6D6974746564212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x12C DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xB6C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xD0F JUMPI PUSH2 0xB9D PUSH2 0x3E8 CALLVALUE EQ PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0xBA8 PUSH1 0x5 SLOAD PUSH2 0x1D12 JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x466 JUMPI PUSH1 0xD PUSH1 0xFF SWAP2 PUSH2 0xCF8 SWAP6 PUSH1 0x40 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE CALLER DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F757320696E7374616E6365206F66207468652062616E6B207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67697374726174696F6E2070726F746F636F6C206973206E6F74207965742074 PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x65726D696E617465642121 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x20 PUSH2 0xDAC PUSH1 0x4 CALLDATALOAD PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xDD7 PUSH2 0x1C0F JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH2 0xE04 PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0xE19 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xE39 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0xE46 PUSH2 0x3E8 CALLVALUE EQ PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xE7D PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1C0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x466 JUMPI PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 DUP5 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x10B0 JUMPI PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x105F JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xFFF JUMPI PUSH2 0xA16 SWAP2 PUSH2 0xF84 PUSH2 0x12C PUSH2 0x982 PUSH1 0x20 DUP6 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6C6F636B656420697473206D6F6E65792121 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F7420796574206C6F636B656420697473206D6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x792121 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636573732064656E6965642061732074686520676976656E2062616E6B20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61646472657373206973206E6F7420696E74656E646564212100000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1144 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1172 PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x124D SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x138E JUMPI PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1323 JUMPI PUSH2 0x1274 PUSH2 0x12C PUSH2 0x253 PUSH1 0x80 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x7D0 SWAP2 PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP3 PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F647920686173206E6F7420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6164792073656E642069747320666972737420726573706F6E73652121000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F742079657420636F6D6D6974656420666F72207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206163636F756E7420696E666F726D6174696F6E2121000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1469 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO SUB PUSH2 0x16E6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x156E SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x1695 JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1635 JUMPI PUSH2 0x1595 PUSH2 0x12C PUSH2 0x253 PUSH1 0x20 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x3E8 SWAP2 PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER DUP3 CALL ISZERO PUSH2 0x393 JUMPI PUSH2 0x37F SWAP3 PUSH2 0x120 DUP4 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520526567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6C6F636B656420697473206D6F6E65792121 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B206E6F7420796574206C6F636B656420746865206D6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x792121 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F746F636F6C206973206E6F7420796574207374617274656421 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x175E PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x178C PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x1867 SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD ISZERO PUSH2 0x18FA JUMPI PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x188F JUMPI PUSH2 0x1274 PUSH2 0x12C PUSH2 0x253 PUSH1 0xC0 DUP5 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F647920686173206E6F7420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6164792073656E6420697473207365636F6E6420726573706F6E736521210000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F64792068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73656E642069747320666972737420726573706F6E7365212100000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x198E PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x1C7B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x19BC PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO EQ PUSH2 0x1EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x466 JUMPI PUSH2 0x1A97 SWAP2 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0xD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE DUP3 PUSH1 0x5 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE DUP3 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE CALLER EQ PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x1B45 JUMPI PUSH2 0xA16 SWAP2 PUSH2 0x1AC2 PUSH2 0x12C PUSH2 0x982 PUSH1 0x40 DUP6 ADD MLOAD TIMESTAMP PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xD PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x308 PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B2068617320616C726561647920636F6D6D69747465642050 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F424C2121 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726567756C61746F727920626F6479206E6F7420796574206C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x656420697473206D6F6E65792121 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x47C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI DUP1 PUSH2 0x3E8 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x47C JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x47C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x47C JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x47C JUMPI SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1C6E JUMPI JUMPDEST POP ISZERO PUSH2 0x1C69 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD LT ISZERO CODESIZE PUSH2 0x1C5E JUMP JUMPDEST ISZERO PUSH2 0x1C82 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652062616E6B20697320616C726561647920726567697374657265642121 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1CCD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374206C6F636B696E6720616D6F756E742121000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D21 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1D3E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420686F6C64696E672074686520696E74656E646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20616464726573732121 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1D21 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1DAA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54696D656C696D6974206E6F7420796574206578636565646564212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DF6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207265677561746F727920626F647920686173206163636573732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F20696E766F6B65207468652066756E6374696F6E2121000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520676976656E2062616E6B206164647265737320697320696E636F7272 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563742E205468652062616E6B20697320616C72656164792072656769737465 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x7265642121 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20696E7374616E6365206F66207468652062616E6B207265676973747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696F6E2070726F746F636F6C2069732072756E6E696E672061742070726573 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x656E742121 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x54696D656C696D69742065786365656465642121 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FAB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636573732064656E696564206173207468652062616E6B20646F6573206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7420686F6C642074686520696E74656E6465642062616E6B20616464726573 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x732121 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 BALANCE CALLDATALOAD CALLDATALOAD 0xC8 0xBD CREATE CREATE2 MUL PUSH8 0x359532506F531982 ORIGIN 0xE0 0x49 CALLCODE LOG2 0xC3 MULMOD 0x5C PUSH11 0x1CC396FC764736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "60:18772:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;;:::i;:::-;7193:97;60:18772;;;;;;;;7201:10;:29;7193:97;:::i;:::-;60:18772;;;;;;;;;;;;7301:104;60:18772;;;;7309:22;7301:104;:::i;:::-;60:18772;;;;;;;;;;;;;;;;;;;;;;;7501:147;60:18772;;;;;;;;;7509:65;7501:147;:::i;:::-;60:18772;;;7709:16;60:18772;;;;;;;;;;;;;;;;;;;;;;7756:98;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;7709:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7764:43;7756:98;:::i;:::-;60:18772;;;;7873:68;60:18772;;;;;;;;8137:136;1340:11;8146:81;60:18772;;;;8146:15;:81;:::i;:::-;8145:95;8137:136;:::i;:::-;60:18772;7201:10;60:18772;7201:10;;;;;8286:45;;;;;60:18772;;;;;;;;;;;8146:15;60:18772;;;;8146:15;60:18772;;;;;;;;;;;7709:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;;;;;;;;;7709:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;8286:45;60:18772;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16881:97;60:18772;;;;;;;;16908:10;16889:29;16881:97;:::i;:::-;60:18772;;;;;;;;;;;;16989:104;60:18772;;;;16997:22;16989:104;:::i;:::-;60:18772;;;;;;;;;;;;;;;;;;;17187:37;60:18772;;17179:147;60:18772;;;;;;;;;17187:65;17179:147;:::i;:::-;60:18772;;;17387:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17387:16;60:18772;;;;;;;17187:37;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17565:46;60:18772;;1340:11;17708:59;60:18772;;;;17708:15;:59;:::i;:::-;:72;60:18772;;;;;;;;;;17708:15;60:18772;;;;;1398:8;-1:-1:-1;;;;1398:8:0;-1:-1:-1;;;;;60:18772:0;;-1:-1:-1;17947:42:0;;;;60:18772;16908:10;;;;;18000:43;;;;;60:18772;;;;;;;;;;;;;17708:15;60:18772;;;;17708:15;60:18772;;;;18427:18;18424:238;17134:23;;;18472:17;60:18772;;18472:17;:::i;:::-;60:18772;;;;;;;;;;;;;;;;;;;18424:238;60:18772;;17387:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;;;;;;;;;17387:16;60:18772;;;;;;;17187:37;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18424:238;60:18772;;;;;;18424:238;;60:18772;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;:::i;:::-;12767:97;60:18772;;;;;;;;12794:10;12775:29;12767:97;:::i;:::-;60:18772;;;;;;;;;;;;12877:104;60:18772;;;;12885:22;12877:104;:::i;:::-;60:18772;;;;;;;;;;;;;;;;;;;;13077:37;60:18772;;13069:147;60:18772;;;;;;;;;13077:65;13069:147;:::i;:::-;60:18772;;;13277:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13277:16;60:18772;;;;;;;13077:37;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13332:47;60:18772;;;;;;;;13541:106;1340:11;13549:60;60:18772;;;;13549:15;:60;:::i;:::-;:73;;13541:106;:::i;:::-;60:18772;;;;;;;13549:15;60:18772;;;;13787:679;;60:18772;;;;;;13277:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;;;;;;;;;13277:16;60:18772;;;;;;;13077:37;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13787:679;60:18772;;;1398:8;60:18772;;;;;;;;13836:42;;;;;60:18772;12794:10;;;1398:8;12794:10;13893:43;;;;;60:18772;;1398:8;60:18772;;;;1398:8;60:18772;;;;13549:15;60:18772;;;;13549:15;60:18772;;;;;;;;;;;;13077:37;60:18772;;;;;;;;;;;;13787:679;;;60:18772;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;;;1340:11;60:18772;;;;;;-1:-1:-1;;60:18772:0;;;;2234:10;60:18772;;;;;2219:68;60:18772;;;;2227:23;2219:68;:::i;:::-;2234:10;60:18772;;2338:23;60:18772;;;;;;;;;;;;;;;;;;;2549:65;1398:8;2557:9;:26;2549:65;:::i;:::-;2627:29;;60:18772;2627:29;:::i;:::-;60:18772;2627:29;60:18772;2234:10;60:18772;;2338:23;60:18772;;;;;;;;;;2842:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2842:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;2627:29;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:10;60:18772;;3005:15;60:18772;;;;;;2842:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;2338:23;60:18772;;;;;;;2842:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;2627:29;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;2338:23;60:18772;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;-1:-1:-1;;;;;60:18772:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;;:::i;:::-;5371:97;60:18772;;;;;;;;5379:10;:29;5371:97;:::i;:::-;60:18772;;;;;;;;;;;;5479:104;60:18772;;;;5487:22;5479:104;:::i;:::-;5594:65;1398:8;5602:9;:26;5594:65;:::i;:::-;60:18772;;;;;;;;;;;;;;;;;;;;;;;5747:147;60:18772;;;;;;;;;5755:65;5747:147;:::i;:::-;60:18772;;;5955:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5955:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6010:43;60:18772;;;;;;6134:64;60:18772;;;;;;;;;;6391:125;1340:11;6400:77;60:18772;;;;6400:15;:77;:::i;6391:125::-;6400:15;60:18772;;;;;;5955:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;;;;;;;;;5955:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;10841:10;60:18772;;;;;10826:68;60:18772;;;;10834:23;10826:68;:::i;:::-;10841:10;60:18772;;10935:23;60:18772;;;;;;;;;;;;10981:147;10935:23;60:18772;;;;;;;;10989:65;10981:147;:::i;:::-;60:18772;;;11189:16;60:18772;;;;;;;;;;;;;;;;;;;;;11236:124;60:18772;;;;;;;;;;;;;;;;;10935:23;60:18772;;;;;;;11189:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10841:10;11244:44;11236:124;:::i;:::-;60:18772;;;;11379:47;60:18772;;;;;;;;11628:115;1340:11;11637:60;60:18772;;;;11637:15;:60;:::i;11628:115::-;60:18772;10841:10;60:18772;10841:10;;;;;11756:45;;;;;60:18772;;;;;;;;;;;11637:15;60:18772;;;;11637:15;60:18772;;;;10935:23;60:18772;;;;;;11189:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;10935:23;60:18772;;;;;;;11189:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;1252:45;60:18772;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;3457:10;60:18772;;;;;3442:68;60:18772;;;;3450:23;3442:68;:::i;:::-;3457:10;60:18772;;3551:23;60:18772;;;;;;;;;;;;3551:23;60:18772;;;;;;;;3605:65;60:18772;;;;;3779:16;60:18772;;;;;;;;;;;;;;;;;;;;;3826:99;60:18772;;;;;;;;;;;;;;;;;3551:23;60:18772;;;;;;;3779:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3457:10;3834:44;3826:99;:::i;:::-;60:18772;;;;4047:64;60:18772;;;;;;;;4304:132;1340:11;4313:77;60:18772;;;;4313:15;:77;:::i;4304:132::-;1398:8;3457:10;60:18772;3457:10;;;;;4449:43;;;;;60:18772;;;;;;4313:15;60:18772;;;;3551:23;60:18772;;;;;;3779:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;3551:23;60:18772;;;;;;;3779:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;14975:10;60:18772;;;;;14960:68;60:18772;;;;14968:23;14960:68;:::i;:::-;14975:10;60:18772;;15069:23;60:18772;;;;;;;;;;;;15115:147;15069:23;60:18772;;;;;;;;15123:65;15115:147;:::i;:::-;60:18772;;;15323:16;60:18772;;;;;;;;;;;;;;;;;;;;;15370:124;60:18772;;;;;;;;;;;;;;;;;15069:23;60:18772;;;;;;;15323:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14975:10;15378:44;15370:124;:::i;:::-;60:18772;;;;15513:46;60:18772;;;;;;;;15764:114;1340:11;15773:59;60:18772;;;;15773:15;:59;:::i;60:18772::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;9310:10;60:18772;;;;;9295:68;60:18772;;;;9303:23;9295:68;:::i;:::-;9310:10;60:18772;;;;;;;;;;;;;;;9460:147;60:18772;;;;;;;;;9468:65;9460:147;:::i;:::-;60:18772;;;9668:16;60:18772;;;;;;;;;;;;;;;;;;;;;9715:124;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;9668:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9310:10;9723:44;9715:124;:::i;:::-;60:18772;;;;9858:68;60:18772;;;;;;;;;;10096:129;1340:11;10105:81;60:18772;;;;10105:15;:81;:::i;10096:129::-;60:18772;;;;;;10105:15;60:18772;;;;;;9668:16;60:18772;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;;;;;;;;;9668:16;60:18772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;1398:8;60:18772;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;60:18772:0;;;;;;;;;;;;;;;;;:::o;1710:249::-;1797:11;;;:41;;;;1710:249;-1:-1:-1;1794:158:0;;;1871:4;1864:12;:::o;1794:158::-;1807:1;1927:13;:::o;1797:41::-;60:18772;;1823:15;60:18772;-1:-1:-1;1812:26:0;1797:41;;;60:18772;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:18772:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:18772:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:18772:0;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1656000",
								"executionCost": "35996",
								"totalCost": "1691996"
							},
							"external": {
								"bankRegProtocolIDGenerator()": "2346",
								"checkIfCommitmentMatches(address,bool)": "infinite",
								"commitPoBL(bytes32)": "355273",
								"exit1BankReg()": "infinite",
								"exit2BankReg(address)": "infinite",
								"exit3BankReg()": "infinite",
								"exit4BankReg()": "infinite",
								"getBankID(address)": "2585",
								"isBankIDValid(uint256)": "2571",
								"lockMoneyByBank()": "421695",
								"lockMoneyByRegulatoryBody(address)": "357683",
								"lockingAmount()": "150",
								"regulatory_Body()": "2392",
								"sendVerificationResult(address,bool)": "infinite",
								"timeLimit()": "397"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 18832,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1439,
									"end": 1440,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1480,
									"end": 1508,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 18832,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022313535c8bdf0f50267359532506f53198232e049f2a2c3095c6a01cc396fc764736f6c63430008120033",
									".code": [
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "25AB292E"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "294A5806"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "33BCC388"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "379CC80D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "45B0F171"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5013AD87"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "62F59501"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "75E5A871"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9CFD3699"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9EC802FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "BBD9F9B1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C08D1FE5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C5FE01E4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D1706B6C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "F93BE9E3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7193,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7290,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7193,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7301,
											"end": 7405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7405,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7301,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7574,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7501,
											"end": 7648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 7648,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7501,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7807,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7756,
											"end": 7854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7854,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7756,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7873,
											"end": 7941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 8146,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8161,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8146,
											"end": 8227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8227,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8146,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8145,
											"end": 8240,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8137,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8137,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7D0"
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8286,
											"end": 8331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8286,
											"end": 8331,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8286,
											"end": 8331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8286,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8286,
											"end": 8331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8161,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8161,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8286,
											"end": 8331,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8286,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520637573746F6D65722068617320616C726561647920636F6D6D697465"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6420666F7220746865206163636F756E7420696E666F726D6174696F6E212100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F6479206E6F7420796574206C6F636B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656420746865206D6F6E65792121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16881,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16918,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 16918,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16881,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16881,
											"end": 16978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16881,
											"end": 16978,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16881,
											"end": 16978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16997,
											"end": 17019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16989,
											"end": 17093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17093,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16989,
											"end": 17093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17179,
											"end": 17326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17179,
											"end": 17326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17179,
											"end": 17326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17179,
											"end": 17326,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 17179,
											"end": 17326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17403,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17403,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17565,
											"end": 17611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 17708,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17723,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17708,
											"end": 17767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17767,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 17708,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17780,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17723,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17947,
											"end": 17989,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 17947,
											"end": 17989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16908,
											"end": 16918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16918,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16918,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18043,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 18000,
											"end": 18043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17723,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17723,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18427,
											"end": 18445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17134,
											"end": 17157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18472,
											"end": 18489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18489,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18472,
											"end": 18489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18662,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18424,
											"end": 18662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17403,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17403,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18662,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18424,
											"end": 18662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18424,
											"end": 18662,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5B595B1A5B5A5D08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F6479206D7573742070726F76696465"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "2069747320726573706F6E736531206265666F72652073656E64696E67207265"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73706F6E7365322121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F64792068617320616C726561647920"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73656E642069747320726573706F6E7365322121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12794,
											"end": 12804,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12767,
											"end": 12864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12864,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12767,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12885,
											"end": 12907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12877,
											"end": 12981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12981,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12877,
											"end": 12981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13142,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13069,
											"end": 13216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13216,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 13069,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13277,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13277,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13332,
											"end": 13379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 13549,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13564,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13549,
											"end": 13609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13609,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13549,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13622,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13541,
											"end": 13647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13647,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13541,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13564,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 14466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13787,
											"end": 14466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13277,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13277,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 14466,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13787,
											"end": 14466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13878,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13836,
											"end": 13878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12794,
											"end": 12804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12794,
											"end": 12804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 12794,
											"end": 12804,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13936,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13936,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13893,
											"end": 13936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13564,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13564,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 14466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 14466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13787,
											"end": 14466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F647920616C72656164792073656E64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2069747320726573706F6E7365312121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5468652062616E6B206E6F742079657420636F6D6D6974746564212100000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2244,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2287,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2219,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2244,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2583,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2549,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2614,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2549,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2627,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2244,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2858,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2858,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2244,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3020,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2858,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2858,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2656,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "50726576696F757320696E7374616E6365206F66207468652062616E6B207265"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "67697374726174696F6E2070726F746F636F6C206973206E6F74207965742074"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726D696E617465642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5371,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5389,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5371,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5371,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5371,
											"end": 5468,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5371,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5479,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5583,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5479,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 5602,
											"end": 5611,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5594,
											"end": 5659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5659,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5594,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5755,
											"end": 5820,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5747,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5894,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5747,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6134,
											"end": 6198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6391,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 6400,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6415,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6400,
											"end": 6477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6391,
											"end": 6516,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6391,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6415,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F64792068617320616C726561647920"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6F636B656420697473206D6F6E65792121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5468652062616E6B206E6F7420796574206C6F636B656420697473206D6F6E65"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "792121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4163636573732064656E6965642061732074686520676976656E2062616E6B20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "61646472657373206973206E6F7420696E74656E646564212100000000000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10826,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10826,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10826,
											"end": 10894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10826,
											"end": 10894,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10826,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10981,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10935,
											"end": 10958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10981,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10981,
											"end": 11128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10981,
											"end": 11128,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10981,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11205,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11236,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11205,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11244,
											"end": 11288,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11236,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11236,
											"end": 11360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11236,
											"end": 11360,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11236,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11426,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11628,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 11637,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11637,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11637,
											"end": 11697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11628,
											"end": 11743,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11628,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7D0"
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10851,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11801,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11756,
											"end": 11801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11637,
											"end": 11652,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11205,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11205,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F647920686173206E6F7420616C7265"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6164792073656E642069747320666972737420726573706F6E73652121000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5468652062616E6B206E6F742079657420636F6D6D6974656420666F72207468"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "65206163636F756E7420696E666F726D6174696F6E2121000000000000000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1252,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3442,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3442,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3442,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3442,
											"end": 3510,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3442,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3826,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3925,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3826,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 4313,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4328,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4313,
											"end": 4390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4304,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4492,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4449,
											"end": 4492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4328,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520526567756C61746F727920626F64792068617320616C726561647920"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6F636B656420697473206D6F6E65792121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5468652062616E6B206E6F7420796574206C6F636B656420746865206D6F6E65"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "792121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5468652070726F746F636F6C206973206E6F7420796574207374617274656421"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 14985,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14991,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14960,
											"end": 15028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 15028,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 14960,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 14985,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15069,
											"end": 15092,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15115,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15069,
											"end": 15092,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15115,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15115,
											"end": 15262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15115,
											"end": 15262,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15115,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15339,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15370,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15069,
											"end": 15092,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15339,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 14985,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15378,
											"end": 15422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15370,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15370,
											"end": 15494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15370,
											"end": 15494,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 15370,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15513,
											"end": 15559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 15773,
											"end": 15832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 15788,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 15832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15773,
											"end": 15832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3E"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F647920686173206E6F7420616C7265"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6164792073656E6420697473207365636F6E6420726573706F6E736521210000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F64792068617320616C726561647920"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "73656E642069747320666972737420726573706F6E7365212100000000000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9320,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9295,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9303,
											"end": 9326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9295,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9295,
											"end": 9363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9295,
											"end": 9363,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 9295,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9320,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9460,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9460,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9460,
											"end": 9607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9460,
											"end": 9607,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 9460,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9684,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9684,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9320,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9715,
											"end": 9839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9839,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 9715,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1340,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 10105,
											"end": 10186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10105,
											"end": 10120,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10105,
											"end": 10186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10105,
											"end": 10186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10225,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 10096,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10105,
											"end": 10120,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9684,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9684,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5468652062616E6B2068617320616C726561647920636F6D6D69747465642050"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F424C2121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520726567756C61746F727920626F6479206E6F7420796574206C6F636B"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656420697473206D6F6E65792121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1959,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1959,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1710,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1794,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1864,
											"end": 1876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1794,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1812,
											"end": 1838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1797,
											"end": 1838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "5468652062616E6B20697320616C726561647920726567697374657265642121"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "496E636F7272656374206C6F636B696E6720616D6F756E742121000000000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "596F7520617265206E6F7420686F6C64696E672074686520696E74656E646564"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20616464726573732121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54696D656C696D6974206E6F7420796574206578636565646564212100000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C79207265677561746F727920626F647920686173206163636573732074"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6F20696E766F6B65207468652066756E6374696F6E2121000000000000000000"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "54686520676976656E2062616E6B206164647265737320697320696E636F7272"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6563742E205468652062616E6B20697320616C72656164792072656769737465"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7265642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F20696E7374616E6365206F66207468652062616E6B207265676973747261"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "74696F6E2070726F746F636F6C2069732072756E6E696E672061742070726573"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656E742121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54696D656C696D69742065786365656465642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "4163636573732064656E696564206173207468652062616E6B20646F6573206E"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "6F7420686F6C642074686520696E74656E6465642062616E6B20616464726573"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "732121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 18832,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"SC_Bank_Registration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bankRegProtocolIDGenerator()": "45b0f171",
							"checkIfCommitmentMatches(address,bool)": "c5fe01e4",
							"commitPoBL(bytes32)": "294a5806",
							"exit1BankReg()": "379cc80d",
							"exit2BankReg(address)": "f93be9e3",
							"exit3BankReg()": "62f59501",
							"exit4BankReg()": "33bcc388",
							"getBankID(address)": "9cfd3699",
							"isBankIDValid(uint256)": "9ec802ff",
							"lockMoneyByBank()": "bbd9f9b1",
							"lockMoneyByRegulatoryBody(address)": "75e5a871",
							"lockingAmount()": "25ab292e",
							"regulatory_Body()": "5013ad87",
							"sendVerificationResult(address,bool)": "d1706b6c",
							"timeLimit()": "c08d1fe5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bankRegProtocolIDGenerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bankAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_response1\",\"type\":\"bool\"}],\"name\":\"checkIfCommitmentMatches\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commit\",\"type\":\"bytes32\"}],\"name\":\"commitPoBL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit1BankReg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bankAddr\",\"type\":\"address\"}],\"name\":\"exit2BankReg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit3BankReg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit4BankReg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bankAddr\",\"type\":\"address\"}],\"name\":\"getBankID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bankID\",\"type\":\"uint256\"}],\"name\":\"isBankIDValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockMoneyByBank\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bankAddr\",\"type\":\"address\"}],\"name\":\"lockMoneyByRegulatoryBody\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regulatory_Body\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bankAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_response2\",\"type\":\"bool\"}],\"name\":\"sendVerificationResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkIfCommitmentMatches(address,bool)\":{\"notice\":\"Caller: Regulatory body When: After the bank commits account information, the Regulatory body checks if the commitment matches with the received information. And invokes this function to register the response. Previous Function: commitPoBL() by bank*\"},\"commitPoBL(bytes32)\":{\"notice\":\"Caller: Bank When: After locking money by regulatory body, bank sends information regarding the proof of banking license(PoBL) in offline mode. And invokes this function to commit the information send in offline. Previous Function: lockMoneyByRegulatoryBody() by Regulatory body*\"},\"exit1BankReg()\":{\"notice\":\"Caller: Bank When: If the Regulatory body does not lock money within time limit, bank can abort the protocol and unlock its money. Previous Function: lockMoneyByBank by bank*\"},\"exit2BankReg(address)\":{\"notice\":\"Caller: Regulatory Body When: Once Reg Body locked money on smart contract, but bank does not commit account info within time limit,  Reg Body can abort the protocol and unlock its money. Here, the system will penalize the bank by deducting its locked amount and transfer the same to the Reg Body. Previous Function: lockMoneyByRegulatoryBody() by Regulatory Body*\"},\"exit3BankReg()\":{\"notice\":\"Caller: Bank When: If the Regulatory body does not send response1 within time limit, bank can abort the protocol and unlock its money. Here, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank. Previous Function: commitPoBL() by bank*\"},\"exit4BankReg()\":{\"notice\":\"Caller: Bank When: If the Regulatory body does not send response2 within time limit, bank can abort the protocol and unlock its money. Here, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank. Previous Function: checkIfCommitmentMatches() by Reg Body*\"},\"getBankID(address)\":{\"notice\":\"Interface to other smart contract\"},\"lockMoneyByBank()\":{\"notice\":\"Caller: Bank When: To initiate bank registration process towards regulatory body. Previous Function: NA*\"},\"lockMoneyByRegulatoryBody(address)\":{\"notice\":\"Caller: Regulatory body When: Once bank locked money on smart contract, Regulatory body invokes this function to lock the security money. Previous Function: lockMoneyByBank() by bank*\"},\"sendVerificationResult(address,bool)\":{\"notice\":\"Caller: Regulatory body When: Once the Regulatory body verifies if the bank belongs to the Regulatory body, it invokes this function to register the verification result on BC. Previous Function: checkIfCommitmentMatches() by Regulatory body*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SC_Bank_Registration.sol\":\"SC_Bank_Registration\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"SC_Bank_Registration.sol\":{\"keccak256\":\"0xf4174afc75757a92efb4ddb4c98686c89b55c66f10137f80d80bca4bb2970573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b8f6fed23031fe5033e45c71da96c5fda18187c0f45fc41b2eac3941fdfe96\",\"dweb:/ipfs/QmdFU2i7zAimrQBwqfaSrJaReWriTKxu8XLH9JLwNiKYHy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
								"label": "bankID",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 38,
								"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
								"label": "latestBankRegProtocolID",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 43,
								"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
								"label": "bankRegistration",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(BankRegistration)30_storage)"
							},
							{
								"astId": 47,
								"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
								"label": "bankRegistrationProtocolCurrentlyRuns",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 49,
								"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
								"label": "regulatory_Body",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 52,
								"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
								"label": "bankRegProtocolIDGenerator",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 61,
								"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
								"label": "bankIDGenerator",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(BankRegistration)30_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration)",
								"numberOfBytes": "32",
								"value": "t_struct(BankRegistration)30_storage"
							},
							"t_struct(BankRegistration)30_storage": {
								"encoding": "inplace",
								"label": "struct SC_Bank_Registration.BankRegistration",
								"members": [
									{
										"astId": 3,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "bankAddr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 5,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "timestamp_lock_security_money_by_bank",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "timestamp_lock_security_money_by_Reg_Body",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "commitment",
										"offset": 0,
										"slot": "3",
										"type": "t_bytes32"
									},
									{
										"astId": 11,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "timestamp_commitment",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 13,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "response1",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 15,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "timestamp_response1",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 17,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "response2",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 19,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "timestamp_response2",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 21,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "unlock_amount_security_money_by_bank",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 23,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "timestamp_unlock_security_money_by_bank",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 25,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "unlock_amount_security_money_by_Reg_Body",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 27,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "timestamp_unlock_security_money_by_Reg_Body",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 29,
										"contract": "SC_Bank_Registration.sol:SC_Bank_Registration",
										"label": "protocol_aborted",
										"offset": 0,
										"slot": "13",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "448"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkIfCommitmentMatches(address,bool)": {
								"notice": "Caller: Regulatory body When: After the bank commits account information, the Regulatory body checks if the commitment matches with the received information. And invokes this function to register the response. Previous Function: commitPoBL() by bank*"
							},
							"commitPoBL(bytes32)": {
								"notice": "Caller: Bank When: After locking money by regulatory body, bank sends information regarding the proof of banking license(PoBL) in offline mode. And invokes this function to commit the information send in offline. Previous Function: lockMoneyByRegulatoryBody() by Regulatory body*"
							},
							"exit1BankReg()": {
								"notice": "Caller: Bank When: If the Regulatory body does not lock money within time limit, bank can abort the protocol and unlock its money. Previous Function: lockMoneyByBank by bank*"
							},
							"exit2BankReg(address)": {
								"notice": "Caller: Regulatory Body When: Once Reg Body locked money on smart contract, but bank does not commit account info within time limit,  Reg Body can abort the protocol and unlock its money. Here, the system will penalize the bank by deducting its locked amount and transfer the same to the Reg Body. Previous Function: lockMoneyByRegulatoryBody() by Regulatory Body*"
							},
							"exit3BankReg()": {
								"notice": "Caller: Bank When: If the Regulatory body does not send response1 within time limit, bank can abort the protocol and unlock its money. Here, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank. Previous Function: commitPoBL() by bank*"
							},
							"exit4BankReg()": {
								"notice": "Caller: Bank When: If the Regulatory body does not send response2 within time limit, bank can abort the protocol and unlock its money. Here, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank. Previous Function: checkIfCommitmentMatches() by Reg Body*"
							},
							"getBankID(address)": {
								"notice": "Interface to other smart contract"
							},
							"lockMoneyByBank()": {
								"notice": "Caller: Bank When: To initiate bank registration process towards regulatory body. Previous Function: NA*"
							},
							"lockMoneyByRegulatoryBody(address)": {
								"notice": "Caller: Regulatory body When: Once bank locked money on smart contract, Regulatory body invokes this function to lock the security money. Previous Function: lockMoneyByBank() by bank*"
							},
							"sendVerificationResult(address,bool)": {
								"notice": "Caller: Regulatory body When: Once the Regulatory body verifies if the bank belongs to the Regulatory body, it invokes this function to register the verification result on BC. Previous Function: checkIfCommitmentMatches() by Regulatory body*"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SC_Bank_Registration.sol": {
				"ast": {
					"absolutePath": "SC_Bank_Registration.sol",
					"exportedSymbols": {
						"SC_Bank_Registration": [
							1230
						]
					},
					"id": 1231,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SC_Bank_Registration",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1230,
							"linearizedBaseContracts": [
								1230
							],
							"name": "SC_Bank_Registration",
							"nameLocation": "69:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SC_Bank_Registration.BankRegistration",
									"id": 30,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "bankAddr",
											"nameLocation": "148:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "140:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "140:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "timestamp_lock_security_money_by_bank",
											"nameLocation": "175:37:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "167:45:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "167:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "timestamp_lock_security_money_by_Reg_Body",
											"nameLocation": "231:41:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "223:49:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "223:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "commitment",
											"nameLocation": "291:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "283:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 8,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "timestamp_commitment",
											"nameLocation": "320:20:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "312:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 10,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "312:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "response1",
											"nameLocation": "356:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "351:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 12,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "351:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "timestamp_response1",
											"nameLocation": "384:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "376:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "376:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "response2",
											"nameLocation": "419:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "414:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 16,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "414:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "timestamp_response2",
											"nameLocation": "447:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "439:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "439:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "unlock_amount_security_money_by_bank",
											"nameLocation": "485:36:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "477:44:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 20,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "477:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "timestamp_unlock_security_money_by_bank",
											"nameLocation": "540:39:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "532:47:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "unlock_amount_security_money_by_Reg_Body",
											"nameLocation": "598:40:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "590:48:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "590:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "timestamp_unlock_security_money_by_Reg_Body",
											"nameLocation": "657:43:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "649:51:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "649:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "protocol_aborted",
											"nameLocation": "716:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "711:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "711:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BankRegistration",
									"nameLocation": "106:16:0",
									"nodeType": "StructDefinition",
									"scope": 1230,
									"src": "99:641:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "bankID",
									"nameLocation": "776:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "748:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "756:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "748:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "latestBankRegProtocolID",
									"nameLocation": "856:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "828:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "836:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "828:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "847:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "bankRegistration",
									"nameLocation": "983:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "946:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
										"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration)"
									},
									"typeName": {
										"id": 42,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 39,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "954:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "946:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
											"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 41,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 40,
												"name": "BankRegistration",
												"nameLocations": [
													"965:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 30,
												"src": "965:16:0"
											},
											"referencedDeclaration": 30,
											"src": "965:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
												"typeString": "struct SC_Bank_Registration.BankRegistration"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "bankRegistrationProtocolCurrentlyRuns",
									"nameLocation": "1095:37:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "1070:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 46,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 44,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1078:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1070:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 45,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1089:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5013ad87",
									"id": 49,
									"mutability": "mutable",
									"name": "regulatory_Body",
									"nameLocation": "1228:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "1213:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 48,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1213:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45b0f171",
									"id": 52,
									"mutability": "mutable",
									"name": "bankRegProtocolIDGenerator",
									"nameLocation": "1267:26:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "1252:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1252:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 51,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1296:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c08d1fe5",
									"id": 55,
									"mutability": "constant",
									"name": "timeLimit",
									"nameLocation": "1328:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "1304:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1304:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1340:11:0",
										"subdenomination": "seconds",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "25ab292e",
									"id": 58,
									"mutability": "constant",
									"name": "lockingAmount",
									"nameLocation": "1382:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "1358:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 56,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 57,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1398:8:0",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 61,
									"mutability": "mutable",
									"name": "bankIDGenerator",
									"nameLocation": "1421:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1230,
									"src": "1413:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 59,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1413:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 60,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1439:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1469:47:0",
										"statements": [
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "regulatory_Body",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1480:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 65,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1498:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1502:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1498:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1480:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1480:28:0"
											}
										]
									},
									"id": 70,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:0"
									},
									"scope": 1230,
									"src": "1449:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1658:44:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 78,
																"name": "bankID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "1676:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 80,
															"indexExpression": {
																"id": 79,
																"name": "_bankAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1683:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1676:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 81,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1675:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 77,
												"id": 82,
												"nodeType": "Return",
												"src": "1669:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1524:54:0",
										"text": "Interface to other smart contract"
									},
									"functionSelector": "9cfd3699",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBankID",
									"nameLocation": "1593:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_bankAddr",
												"nameLocation": "1611:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1603:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:19:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1644:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:0"
									},
									"scope": 1230,
									"src": "1584:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1783:176:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 91,
															"name": "_bankID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1807:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1797:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 94,
															"name": "_bankID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1812:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 95,
															"name": "bankIDGenerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1823:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1812:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1797:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 105,
													"nodeType": "Block",
													"src": "1912:40:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1934:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1933:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 90,
															"id": 104,
															"nodeType": "Return",
															"src": "1927:13:0"
														}
													]
												},
												"id": 106,
												"nodeType": "IfStatement",
												"src": "1794:158:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "1849:39:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 98,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1871:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"id": 99,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1870:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 90,
															"id": 100,
															"nodeType": "Return",
															"src": "1864:12:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9ec802ff",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBankIDValid",
									"nameLocation": "1719:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_bankID",
												"nameLocation": "1741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1772:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1772:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:6:0"
									},
									"scope": 1230,
									"src": "1710:249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "2208:970:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 113,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2227:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 116,
																"indexExpression": {
																	"expression": {
																		"id": 114,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2234:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2238:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2234:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2227:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2249:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2227:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2252:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															},
															"value": "The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2219:68:0"
											},
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "2316:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "2308:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2308:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"baseExpression": {
														"id": 124,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2338:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 127,
													"indexExpression": {
														"expression": {
															"id": 125,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2362:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2366:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2362:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2338:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2308:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 130,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2392:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 132,
																"indexExpression": {
																	"id": 131,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "2430:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2392:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2392:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726576696f757320696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c206973206e6f7420796574207465726d696e617465642121",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:77:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f8495c8bfc729af412cd96393bc1aaf9531d100bb70d73e41a2ad10505c948f",
																"typeString": "literal_string \"Previous instance of the bank registration protocol is not yet terminated!!\""
															},
															"value": "Previous instance of the bank registration protocol is not yet terminated!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f8495c8bfc729af412cd96393bc1aaf9531d100bb70d73e41a2ad10505c948f",
																"typeString": "literal_string \"Previous instance of the bank registration protocol is not yet terminated!!\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2384:154:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 139,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2557:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2561:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2557:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 141,
																"name": "lockingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "2570:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2557:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374206c6f636b696e6720616d6f756e742121",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2585:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b1a8dedc5206adea6e874c5d3c07f1e18442f9c5c8735059c3b02e88bed50",
																"typeString": "literal_string \"Incorrect locking amount!!\""
															},
															"value": "Incorrect locking amount!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b1a8dedc5206adea6e874c5d3c07f1e18442f9c5c8735059c3b02e88bed50",
																"typeString": "literal_string \"Incorrect locking amount!!\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2549:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "2549:65:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2627:29:0",
													"subExpression": {
														"id": 146,
														"name": "bankRegProtocolIDGenerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2627:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2627:29:0"
											},
											{
												"expression": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 149,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2667:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 150,
														"name": "bankRegProtocolIDGenerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2688:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2667:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2667:47:0"
											},
											{
												"expression": {
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 153,
															"name": "latestBankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "2725:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 156,
														"indexExpression": {
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2749:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2753:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2725:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 157,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2763:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2725:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "2725:56:0"
											},
											{
												"assignments": [
													162
												],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "2818:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "2794:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 161,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 160,
																"name": "BankRegistration",
																"nameLocations": [
																	"2794:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "2794:16:0"
															},
															"referencedDeclaration": 30,
															"src": "2794:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"baseExpression": {
														"id": 163,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2842:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 165,
													"indexExpression": {
														"id": 164,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2859:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2842:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2794:84:0"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 167,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2889:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2911:8:0",
														"memberName": "bankAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "2889:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 170,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2922:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2922:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2889:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2889:43:0"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 174,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2943:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2965:37:0",
														"memberName": "timestamp_lock_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2943:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 177,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3011:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3005:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2943:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2943:77:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 181,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "3033:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 183,
														"indexExpression": {
															"id": 182,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3050:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3033:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "3072:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "3033:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3033:60:0"
											},
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 187,
															"name": "bankRegistrationProtocolCurrentlyRuns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "3106:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 189,
														"indexExpression": {
															"id": 188,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3144:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3106:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3166:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3106:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3106:64:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2024:131:0",
										"text": "Caller: Bank\nWhen: To initiate bank registration process towards regulatory body.\nPrevious Function: NA*"
									},
									"functionSelector": "bbd9f9b1",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockMoneyByBank",
									"nameLocation": "2170:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:2:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:0:0"
									},
									"scope": 1230,
									"src": "2161:1017:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3431:1624:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 199,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "3450:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 202,
																"indexExpression": {
																	"expression": {
																		"id": 200,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3457:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3461:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3457:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3450:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3472:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3450:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3475:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															},
															"value": "The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3442:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "3442:68:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "3529:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "3521:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"baseExpression": {
														"id": 210,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "3551:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"expression": {
															"id": 211,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3575:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3579:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3575:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3551:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 216,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "3605:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 218,
																"indexExpression": {
																	"id": 217,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3643:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3605:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3666:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3605:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652070726f746f636f6c206973206e6f742079657420737461727465642121",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3672:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df493badc17b3dedc631eea2c0a4bdaf1525a8a7440faa338a2d1282846f8ad6",
																"typeString": "literal_string \"The protocol is not yet started!!\""
															},
															"value": "The protocol is not yet started!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df493badc17b3dedc631eea2c0a4bdaf1525a8a7440faa338a2d1282846f8ad6",
																"typeString": "literal_string \"The protocol is not yet started!!\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "3597:111:0"
											},
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "3755:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "3731:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 225,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 224,
																"name": "BankRegistration",
																"nameLocations": [
																	"3731:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "3731:16:0"
															},
															"referencedDeclaration": 30,
															"src": "3731:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"baseExpression": {
														"id": 227,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3779:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 229,
													"indexExpression": {
														"id": 228,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3796:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3779:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3731:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 232,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "3834:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3856:8:0",
																"memberName": "bankAddr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "3834:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 234,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3868:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3872:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3868:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3834:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420686f6c64696e672074686520696e74656e64656420616464726573732121",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3880:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb8b3fe8a7da373d113a265cc7cee2416812d0402a1ff740e91643ff38af3760",
																"typeString": "literal_string \"You are not holding the intended address!!\""
															},
															"value": "You are not holding the intended address!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb8b3fe8a7da373d113a265cc7cee2416812d0402a1ff740e91643ff38af3760",
																"typeString": "literal_string \"You are not holding the intended address!!\""
															}
														],
														"id": 231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3826:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "3826:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 241,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "4047:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4069:37:0",
																"memberName": "timestamp_lock_security_money_by_bank",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "4047:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4110:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4047:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b206e6f7420796574206c6f636b656420746865206d6f6e65792121",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4113:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_607924cc3efea6faeda754f9eb64eaa72d5142ff53348f587b99f9db1ba2b2e6",
																"typeString": "literal_string \"The bank not yet locked the money!!\""
															},
															"value": "The bank not yet locked the money!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_607924cc3efea6faeda754f9eb64eaa72d5142ff53348f587b99f9db1ba2b2e6",
																"typeString": "literal_string \"The bank not yet locked the money!!\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4039:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "4039:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 249,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "4170:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4192:41:0",
																"memberName": "timestamp_lock_security_money_by_Reg_Body",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "4170:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4170:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520526567756c61746f727920626f64792068617320616c7265616479206c6f636b656420697473206d6f6e65792121",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4240:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbb891f736653e7c2c42bb2210e8212332b356631e15872fef247854e078a014",
																"typeString": "literal_string \"The Regulatory body has already locked its money!!\""
															},
															"value": "The Regulatory body has already locked its money!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbb891f736653e7c2c42bb2210e8212332b356631e15872fef247854e078a014",
																"typeString": "literal_string \"The Regulatory body has already locked its money!!\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4162:131:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "4162:131:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 257,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4313:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4319:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4313:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 259,
																				"name": "new_bank_registration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "4331:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																					"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																				}
																			},
																			"id": 260,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4353:37:0",
																			"memberName": "timestamp_lock_security_money_by_bank",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5,
																			"src": "4331:59:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4313:77:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 262,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4312:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 263,
																"name": "timeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "4394:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4312:91:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d6974206e6f74207965742065786365656465642121",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4405:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															},
															"value": "Timelimit not yet exceeded!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4304:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4304:132:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4304:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "lockingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "4478:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 270,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4457:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4461:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4457:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4449:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4449:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4469:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4449:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4449:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4449:43:0"
											},
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 277,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4503:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4525:36:0",
														"memberName": "unlock_amount_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "4503:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 280,
														"name": "lockingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "4564:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4503:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4503:74:0"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 283,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4588:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4610:39:0",
														"memberName": "timestamp_unlock_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "4588:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 286,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4652:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4658:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4652:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4588:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4588:79:0"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 290,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4853:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4875:16:0",
														"memberName": "protocol_aborted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "4853:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4894:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4853:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "4853:45:0"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 296,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4909:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "4926:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4909:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "4948:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "4909:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "4909:60:0"
											},
											{
												"expression": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 302,
															"name": "bankRegistrationProtocolCurrentlyRuns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "4982:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 304,
														"indexExpression": {
															"id": 303,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "5020:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4982:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5042:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4982:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "4982:65:0"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "3186:201:0",
										"text": "Caller: Bank\nWhen: If the Regulatory body does not lock money within time limit, bank can abort the protocol and unlock its money.\nPrevious Function: lockMoneyByBank by bank*"
									},
									"functionSelector": "379cc80d",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit1BankReg",
									"nameLocation": "3402:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3414:2:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3431:0:0"
									},
									"scope": 1230,
									"src": "3393:1662:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "5360:1338:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5379:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5383:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5379:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 318,
																"name": "regulatory_Body",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "5393:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5379:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207265677561746f727920626f6479206861732061636365737320746f20696e766f6b65207468652066756e6374696f6e2121",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5410:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															},
															"value": "Only reguatory body has access to invoke the function!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5371:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5371:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 324,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "5487:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 326,
																"indexExpression": {
																	"id": 325,
																	"name": "_bankAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "5494:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5487:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5508:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5487:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520676976656e2062616e6b206164647265737320697320696e636f72726563742e205468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5511:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															},
															"value": "The given bank address is incorrect. The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5479:104:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "5479:104:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 333,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5602:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5606:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5602:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 335,
																"name": "lockingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "5615:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5602:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374206c6f636b696e6720616d6f756e742121",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5630:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b1a8dedc5206adea6e874c5d3c07f1e18442f9c5c8735059c3b02e88bed50",
																"typeString": "literal_string \"Incorrect locking amount!!\""
															},
															"value": "Incorrect locking amount!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b1a8dedc5206adea6e874c5d3c07f1e18442f9c5c8735059c3b02e88bed50",
																"typeString": "literal_string \"Incorrect locking amount!!\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5594:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "5594:65:0"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "5680:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "5672:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"baseExpression": {
														"id": 342,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "5702:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 344,
													"indexExpression": {
														"id": 343,
														"name": "_bankAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "5726:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5702:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5672:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 347,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "5755:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 349,
																"indexExpression": {
																	"id": 348,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "5793:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5755:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5816:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "5755:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573656e742121",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5822:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															},
															"value": "No instance of the bank registration protocol is running at present!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5747:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "5747:147:0"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "5931:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "5907:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 356,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 355,
																"name": "BankRegistration",
																"nameLocations": [
																	"5907:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "5907:16:0"
															},
															"referencedDeclaration": 30,
															"src": "5907:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"baseExpression": {
														"id": 358,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "5955:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 360,
													"indexExpression": {
														"id": 359,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5972:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5955:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5907:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 363,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "6010:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6032:8:0",
																"memberName": "bankAddr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "6010:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 365,
																"name": "_bankAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "6044:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6010:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636573732064656e6965642061732074686520676976656e2062616e6b2061646472657373206973206e6f7420696e74656e6465642121",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6055:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fe9ef44fc7269344f471db27ce8a3d1dcd99bbca6176b75d46cd5f8a20a918e",
																"typeString": "literal_string \"Access denied as the given bank address is not intended!!\""
															},
															"value": "Access denied as the given bank address is not intended!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fe9ef44fc7269344f471db27ce8a3d1dcd99bbca6176b75d46cd5f8a20a918e",
																"typeString": "literal_string \"Access denied as the given bank address is not intended!!\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6002:113:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "6002:113:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 371,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "6134:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6156:37:0",
																"memberName": "timestamp_lock_security_money_by_bank",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "6134:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6197:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6134:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b206e6f7420796574206c6f636b656420697473206d6f6e65792121",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6200:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecb36e2265f4094eff89441ca045530ba95365c9915f15b4daeef36a4b906059",
																"typeString": "literal_string \"The bank not yet locked its money!!\""
															},
															"value": "The bank not yet locked its money!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecb36e2265f4094eff89441ca045530ba95365c9915f15b4daeef36a4b906059",
																"typeString": "literal_string \"The bank not yet locked its money!!\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6126:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "6126:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 379,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "6257:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6279:41:0",
																"memberName": "timestamp_lock_security_money_by_Reg_Body",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "6257:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6324:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6257:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f64792068617320616c7265616479206c6f636b656420697473206d6f6e65792121",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6327:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd185aed500e8ffe0ec28f54b1cdbb0b8575d3572c4c8f39e9a04b49c073e9ab",
																"typeString": "literal_string \"The regulatory body has already locked its money!!\""
															},
															"value": "The regulatory body has already locked its money!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd185aed500e8ffe0ec28f54b1cdbb0b8575d3572c4c8f39e9a04b49c073e9ab",
																"typeString": "literal_string \"The regulatory body has already locked its money!!\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6249:131:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "6249:131:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 387,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "6400:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6406:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "6400:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 389,
																				"name": "new_bank_registration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 357,
																				"src": "6418:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																					"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6440:37:0",
																			"memberName": "timestamp_lock_security_money_by_bank",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5,
																			"src": "6418:59:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6400:77:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 392,
																		"name": "timeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "6481:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6400:90:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 394,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6399:92:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d69742065786365656465642121",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6493:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68b512436bf638c675785860e8cb56f83b1e8130f79c6a400bcf6d48945df089",
																"typeString": "literal_string \"Timelimit exceeded!!\""
															},
															"value": "Timelimit exceeded!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68b512436bf638c675785860e8cb56f83b1e8130f79c6a400bcf6d48945df089",
																"typeString": "literal_string \"Timelimit exceeded!!\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6391:125:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "6391:125:0"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 398,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "6537:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6559:41:0",
														"memberName": "timestamp_lock_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "6537:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 401,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6609:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6603:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6537:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "6537:81:0"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 405,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6629:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 407,
														"indexExpression": {
															"id": 406,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6646:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6629:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 408,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "6669:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "6629:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6629:61:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "5065:210:0",
										"text": "Caller: Regulatory body\nWhen: Once bank locked money on smart contract, Regulatory body invokes this function to lock the security money.\nPrevious Function: lockMoneyByBank() by bank*"
									},
									"functionSelector": "75e5a871",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockMoneyByRegulatoryBody",
									"nameLocation": "5292:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "_bankAddr",
												"nameLocation": "5326:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5318:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5317:19:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5360:0:0"
									},
									"scope": 1230,
									"src": "5283:1415:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "7182:1714:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 419,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7201:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7205:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7201:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 421,
																"name": "regulatory_Body",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "7215:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7201:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207265677561746f727920626f6479206861732061636365737320746f20696e766f6b65207468652066756e6374696f6e2121",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7232:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															},
															"value": "Only reguatory body has access to invoke the function!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7193:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "7193:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 427,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "7309:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 429,
																"indexExpression": {
																	"id": 428,
																	"name": "_bankAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7316:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7309:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7330:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7309:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520676976656e2062616e6b206164647265737320697320696e636f72726563742e205468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7333:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															},
															"value": "The given bank address is incorrect. The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7301:104:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "7301:104:0"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "7434:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "7426:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7426:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"baseExpression": {
														"id": 437,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "7456:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 439,
													"indexExpression": {
														"id": 438,
														"name": "_bankAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "7480:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7456:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7426:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 442,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "7509:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "7547:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7509:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7570:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "7509:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573656e742121",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7576:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															},
															"value": "No instance of the bank registration protocol is running at present!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7501:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7501:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "7501:147:0"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "7685:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "7661:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 451,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 450,
																"name": "BankRegistration",
																"nameLocations": [
																	"7661:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "7661:16:0"
															},
															"referencedDeclaration": 30,
															"src": "7661:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"baseExpression": {
														"id": 453,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "7709:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 455,
													"indexExpression": {
														"id": 454,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "7726:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7709:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7661:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 458,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "7764:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7786:8:0",
																"memberName": "bankAddr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "7764:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 460,
																"name": "_bankAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "7798:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7764:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420686f6c64696e672074686520696e74656e64656420616464726573732121",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7809:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb8b3fe8a7da373d113a265cc7cee2416812d0402a1ff740e91643ff38af3760",
																"typeString": "literal_string \"You are not holding the intended address!!\""
															},
															"value": "You are not holding the intended address!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb8b3fe8a7da373d113a265cc7cee2416812d0402a1ff740e91643ff38af3760",
																"typeString": "literal_string \"You are not holding the intended address!!\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7756:98:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "7756:98:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 466,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "7873:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7895:41:0",
																"memberName": "timestamp_lock_security_money_by_Reg_Body",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "7873:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7940:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7873:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b656420746865206d6f6e65792121",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7943:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4283eb6d6798de2642082eb7d294682779e1d24caae650656935ba68b9e7905",
																"typeString": "literal_string \"The regulatory body not yet locked the money!!\""
															},
															"value": "The regulatory body not yet locked the money!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4283eb6d6798de2642082eb7d294682779e1d24caae650656935ba68b9e7905",
																"typeString": "literal_string \"The regulatory body not yet locked the money!!\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7865:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7865:127:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "7865:127:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 474,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "8011:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8033:20:0",
																"memberName": "timestamp_commitment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 11,
																"src": "8011:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8057:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8011:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520637573746f6d65722068617320616c726561647920636f6d6d6974656420666f7220746865206163636f756e7420696e666f726d6174696f6e2121",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8060:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0bc32b0cc86841f71f9f03d05263ff47a2028fd24e66d3376f0266334f5b02aa",
																"typeString": "literal_string \"The customer has already commited for the account information!!\""
															},
															"value": "The customer has already commited for the account information!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0bc32b0cc86841f71f9f03d05263ff47a2028fd24e66d3376f0266334f5b02aa",
																"typeString": "literal_string \"The customer has already commited for the account information!!\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8003:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8003:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8003:123:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 482,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "8146:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8152:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "8146:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 484,
																				"name": "new_bank_registration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "8164:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																					"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																				}
																			},
																			"id": 485,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8186:41:0",
																			"memberName": "timestamp_lock_security_money_by_Reg_Body",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 7,
																			"src": "8164:63:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8146:81:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 487,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8145:83:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 488,
																"name": "timeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "8231:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8145:95:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d6974206e6f74207965742065786365656465642121",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8242:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															},
															"value": "Timelimit not yet exceeded!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8137:136:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "8137:136:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8315:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 500,
																"name": "lockingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "8317:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8315:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 495,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8294:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8298:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8294:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8286:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8286:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8286:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8306:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8286:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8286:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "8286:45:0"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 504,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8344:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8366:36:0",
														"memberName": "unlock_amount_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "8344:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8405:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8344:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "8344:62:0"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 510,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8417:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8439:40:0",
														"memberName": "unlock_amount_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "8417:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8482:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 514,
															"name": "lockingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "8484:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8482:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8417:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "8417:80:0"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 518,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8508:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8530:39:0",
														"memberName": "timestamp_unlock_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "8508:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 521,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8572:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8578:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8572:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8508:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "8508:79:0"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 525,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8598:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8620:43:0",
														"memberName": "timestamp_unlock_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "8598:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 528,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8666:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8672:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8666:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8598:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "8598:83:0"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 532,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8694:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8716:16:0",
														"memberName": "protocol_aborted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "8694:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8735:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8694:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "8694:45:0"
											},
											{
												"expression": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 538,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "8750:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 540,
														"indexExpression": {
															"id": 539,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "8767:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8750:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 541,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "8789:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "8750:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "8750:60:0"
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 544,
															"name": "bankRegistrationProtocolCurrentlyRuns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "8823:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 546,
														"indexExpression": {
															"id": 545,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "8861:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8823:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8883:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8823:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "8823:65:0"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "6708:413:0",
										"text": "Caller: Regulatory Body\nWhen: Once Reg Body locked money on smart contract, but bank does not commit account info within time limit, \nReg Body can abort the protocol and unlock its money. Here, the system will penalize the bank by deducting\nits locked amount and transfer the same to the Reg Body.\nPrevious Function: lockMoneyByRegulatoryBody() by Regulatory Body*"
									},
									"functionSelector": "f93be9e3",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit2BankReg",
									"nameLocation": "7136:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "_bankAddr",
												"nameLocation": "7157:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "7149:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7148:19:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7182:0:0"
									},
									"scope": 1230,
									"src": "7127:1769:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "9284:1149:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 558,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "9303:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 561,
																"indexExpression": {
																	"expression": {
																		"id": 559,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9310:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9314:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9310:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9303:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9325:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9303:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9328:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															},
															"value": "The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9295:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "9295:68:0"
											},
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "9392:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "9384:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 567,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9384:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 573,
												"initialValue": {
													"baseExpression": {
														"id": 569,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "9414:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 572,
													"indexExpression": {
														"expression": {
															"id": 570,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9438:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9442:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9438:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9414:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9384:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 575,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "9468:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 577,
																"indexExpression": {
																	"id": 576,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "9506:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9468:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9529:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "9468:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573656e742121",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9535:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															},
															"value": "No instance of the bank registration protocol is running at present!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															}
														],
														"id": 574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9460:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "9460:147:0"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "9644:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "9620:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 584,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 583,
																"name": "BankRegistration",
																"nameLocations": [
																	"9620:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "9620:16:0"
															},
															"referencedDeclaration": 30,
															"src": "9620:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"baseExpression": {
														"id": 586,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "9668:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 588,
													"indexExpression": {
														"id": 587,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "9685:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9668:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9620:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 591,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "9723:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9745:8:0",
																"memberName": "bankAddr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "9723:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 593,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9757:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9761:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9757:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9723:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636573732064656e696564206173207468652062616e6b20646f6573206e6f7420686f6c642074686520696e74656e6465642062616e6b20616464726573732121",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9769:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9b8b46cdef77d19c15260ff97650374207efb4ac01e9e8bc8bb33bb80bf5b0c",
																"typeString": "literal_string \"Access denied as the bank does not hold the intended bank address!!\""
															},
															"value": "Access denied as the bank does not hold the intended bank address!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9b8b46cdef77d19c15260ff97650374207efb4ac01e9e8bc8bb33bb80bf5b0c",
																"typeString": "literal_string \"Access denied as the bank does not hold the intended bank address!!\""
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9715:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "9715:124:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 600,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "9858:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9880:41:0",
																"memberName": "timestamp_lock_security_money_by_Reg_Body",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "9858:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9925:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9858:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f6479206e6f7420796574206c6f636b656420697473206d6f6e65792121",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9928:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_839e9b17c9cc1b77997d086696d300a229995d09e9742e716fa6b76eb963fc03",
																"typeString": "literal_string \"The regulatory body not yet locked its money!!\""
															},
															"value": "The regulatory body not yet locked its money!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_839e9b17c9cc1b77997d086696d300a229995d09e9742e716fa6b76eb963fc03",
																"typeString": "literal_string \"The regulatory body not yet locked its money!!\""
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9850:127:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "9850:127:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 608,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "9996:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10018:20:0",
																"memberName": "timestamp_commitment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 11,
																"src": "9996:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10042:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9996:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b2068617320616c726561647920636f6d6d697474656420506f424c2121",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10045:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18c43a0a48e8f61f30ea067604809084bdd36febb762a1d398c61f3f493ddec8",
																"typeString": "literal_string \"The bank has already committed PoBL!!\""
															},
															"value": "The bank has already committed PoBL!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18c43a0a48e8f61f30ea067604809084bdd36febb762a1d398c61f3f493ddec8",
																"typeString": "literal_string \"The bank has already committed PoBL!!\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9988:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "9988:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 616,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "10105:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10111:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "10105:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 618,
																				"name": "new_bank_registration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 585,
																				"src": "10123:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																					"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																				}
																			},
																			"id": 619,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10145:41:0",
																			"memberName": "timestamp_lock_security_money_by_Reg_Body",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 7,
																			"src": "10123:63:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10105:81:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 621,
																		"name": "timeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "10190:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10105:94:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 623,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10104:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d69742065786365656465642121",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10202:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68b512436bf638c675785860e8cb56f83b1e8130f79c6a400bcf6d48945df089",
																"typeString": "literal_string \"Timelimit exceeded!!\""
															},
															"value": "Timelimit exceeded!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68b512436bf638c675785860e8cb56f83b1e8130f79c6a400bcf6d48945df089",
																"typeString": "literal_string \"Timelimit exceeded!!\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10096:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10096:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "10096:129:0"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 627,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10238:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10260:10:0",
														"memberName": "commitment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "10238:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 630,
														"name": "_commit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "10273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "10238:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "10238:42:0"
											},
											{
												"expression": {
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 633,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10291:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10313:20:0",
														"memberName": "timestamp_commitment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "10291:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 636,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10336:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10342:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10336:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10291:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "10291:60:0"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 640,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "10364:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 642,
														"indexExpression": {
															"id": 641,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "10381:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10364:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 643,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "10404:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "10364:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "10364:61:0"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "8907:317:0",
										"text": "Caller: Bank\nWhen: After locking money by regulatory body, bank sends information regarding the proof of banking license(PoBL) in offline mode.\nAnd invokes this function to commit the information send in offline.\nPrevious Function: lockMoneyByRegulatoryBody() by Regulatory body*"
									},
									"functionSelector": "294a5806",
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "commitPoBL",
									"nameLocation": "9241:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "_commit",
												"nameLocation": "9260:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "9252:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 553,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9251:17:0"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9284:0:0"
									},
									"scope": 1230,
									"src": "9232:1201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "10815:1551:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 652,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "10834:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 655,
																"indexExpression": {
																	"expression": {
																		"id": 653,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10841:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10845:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10841:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10834:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10834:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10859:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															},
															"value": "The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10826:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "10826:68:0"
											},
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "10913:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "10905:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"baseExpression": {
														"id": 663,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "10935:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 666,
													"indexExpression": {
														"expression": {
															"id": 664,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10959:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10963:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10959:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10935:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10905:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 669,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "10989:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 671,
																"indexExpression": {
																	"id": 670,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "11027:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10989:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11050:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "10989:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573656e742121",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11056:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															},
															"value": "No instance of the bank registration protocol is running at present!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															}
														],
														"id": 668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10981:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "10981:147:0"
											},
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "11165:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "11141:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 678,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 677,
																"name": "BankRegistration",
																"nameLocations": [
																	"11141:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "11141:16:0"
															},
															"referencedDeclaration": 30,
															"src": "11141:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"baseExpression": {
														"id": 680,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "11189:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 682,
													"indexExpression": {
														"id": 681,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "11206:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11189:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11141:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 685,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "11244:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11266:8:0",
																"memberName": "bankAddr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "11244:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 687,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11278:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11282:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11278:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11244:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636573732064656e696564206173207468652062616e6b20646f6573206e6f7420686f6c642074686520696e74656e6465642062616e6b20616464726573732121",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11290:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9b8b46cdef77d19c15260ff97650374207efb4ac01e9e8bc8bb33bb80bf5b0c",
																"typeString": "literal_string \"Access denied as the bank does not hold the intended bank address!!\""
															},
															"value": "Access denied as the bank does not hold the intended bank address!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9b8b46cdef77d19c15260ff97650374207efb4ac01e9e8bc8bb33bb80bf5b0c",
																"typeString": "literal_string \"Access denied as the bank does not hold the intended bank address!!\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11236:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "11236:124:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 694,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "11379:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11401:20:0",
																"memberName": "timestamp_commitment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 11,
																"src": "11379:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11425:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11379:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b206e6f742079657420636f6d6d6974656420666f7220746865206163636f756e7420696e666f726d6174696f6e2121",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11428:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a90d9ad3ad128d2abc68d519275de70d3d4666f64d176190601172301aac61a4",
																"typeString": "literal_string \"The bank not yet commited for the account information!!\""
															},
															"value": "The bank not yet commited for the account information!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a90d9ad3ad128d2abc68d519275de70d3d4666f64d176190601172301aac61a4",
																"typeString": "literal_string \"The bank not yet commited for the account information!!\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11371:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "11371:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 702,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "11505:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11527:19:0",
																"memberName": "timestamp_response1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 15,
																"src": "11505:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11505:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f647920686173206e6f7420616c72656164792073656e642069747320666972737420726573706f6e73652121",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11553:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2407beb6726a9f22b30d5578efd6ca6d112b222cc691cec0be117e5f7906eae5",
																"typeString": "literal_string \"The regulatory body has not already send its first response!!\""
															},
															"value": "The regulatory body has not already send its first response!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2407beb6726a9f22b30d5578efd6ca6d112b222cc691cec0be117e5f7906eae5",
																"typeString": "literal_string \"The regulatory body has not already send its first response!!\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11497:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "11497:120:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 710,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "11637:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11643:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "11637:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 712,
																				"name": "new_bank_registration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "11655:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																					"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																				}
																			},
																			"id": 713,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11677:20:0",
																			"memberName": "timestamp_commitment",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 11,
																			"src": "11655:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11637:60:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 715,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11636:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 716,
																"name": "timeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "11701:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11636:74:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d6974206e6f74207965742065786365656465642121",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11712:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															},
															"value": "Timelimit not yet exceeded!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "11628:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11785:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 728,
																"name": "lockingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "11787:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11785:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 723,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11764:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11768:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11764:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11756:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 721,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11756:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11756:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11776:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "11756:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11756:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "11756:45:0"
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 732,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "11814:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11836:36:0",
														"memberName": "unlock_amount_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "11814:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11875:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 736,
															"name": "lockingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "11877:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11875:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11814:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "11814:76:0"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 740,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "11901:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11923:40:0",
														"memberName": "unlock_amount_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "11901:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11901:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "11901:66:0"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 746,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "11978:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12000:39:0",
														"memberName": "timestamp_unlock_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "11978:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 749,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12042:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12048:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12042:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11978:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "11978:79:0"
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 753,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "12068:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12090:43:0",
														"memberName": "timestamp_unlock_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "12068:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 756,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12136:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12142:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12136:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12068:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "12068:83:0"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 760,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "12164:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12186:16:0",
														"memberName": "protocol_aborted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "12164:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12205:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12164:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "12164:45:0"
											},
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 766,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "12220:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 768,
														"indexExpression": {
															"id": 767,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "12237:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12220:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 769,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "12259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "12220:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "12220:60:0"
											},
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 772,
															"name": "bankRegistrationProtocolCurrentlyRuns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "12293:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 774,
														"indexExpression": {
															"id": 773,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "12331:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12293:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12353:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12293:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "12293:65:0"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "10441:330:0",
										"text": "Caller: Bank\nWhen: If the Regulatory body does not send response1 within time limit, bank can abort the protocol and unlock its money.\nHere, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank.\nPrevious Function: commitPoBL() by bank*"
									},
									"functionSelector": "62f59501",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit3BankReg",
									"nameLocation": "10786:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10798:2:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10815:0:0"
									},
									"scope": 1230,
									"src": "10777:1589:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "12756:1791:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "regulatory_Body",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "12775:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 789,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12794:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12798:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12794:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12775:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207265677561746f727920626f6479206861732061636365737320746f20696e766f6b65207468652066756e6374696f6e2121",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12806:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															},
															"value": "Only reguatory body has access to invoke the function!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12767:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "12767:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 796,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "12885:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 798,
																"indexExpression": {
																	"id": 797,
																	"name": "_bankAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "12892:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12885:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12906:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12885:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520676976656e2062616e6b206164647265737320697320696e636f72726563742e205468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12909:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															},
															"value": "The given bank address is incorrect. The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															}
														],
														"id": 795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12877:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12877:104:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "12877:104:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "13002:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "12994:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12994:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"baseExpression": {
														"id": 806,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "13024:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 808,
													"indexExpression": {
														"id": 807,
														"name": "_bankAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "13048:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13024:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12994:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 811,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "13077:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 813,
																"indexExpression": {
																	"id": 812,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "13115:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13077:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13138:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "13077:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573656e742121",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13144:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															},
															"value": "No instance of the bank registration protocol is running at present!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13069:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "13069:147:0"
											},
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "13253:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "13229:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 820,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 819,
																"name": "BankRegistration",
																"nameLocations": [
																	"13229:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "13229:16:0"
															},
															"referencedDeclaration": 30,
															"src": "13229:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"baseExpression": {
														"id": 822,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "13277:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 824,
													"indexExpression": {
														"id": 823,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "13294:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13277:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13229:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 827,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "13332:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13354:20:0",
																"memberName": "timestamp_commitment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 11,
																"src": "13332:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13378:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13332:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b206e6f742079657420636f6d6d69747465642121",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13381:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81b4ebe940b66cdb6c08d7408eb402c1aed48695f6fb69e18b8edc020f338bbc",
																"typeString": "literal_string \"The bank not yet committed!!\""
															},
															"value": "The bank not yet committed!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81b4ebe940b66cdb6c08d7408eb402c1aed48695f6fb69e18b8edc020f338bbc",
																"typeString": "literal_string \"The bank not yet committed!!\""
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13324:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "13324:88:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 835,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "13431:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13453:19:0",
																"memberName": "timestamp_response1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 15,
																"src": "13431:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13476:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13431:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f647920616c72656164792073656e642069747320726573706f6e7365312121",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13479:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae94fc25b68890d86bc54b89d77ae1121e4862117674a61d07e58986b81e3c75",
																"typeString": "literal_string \"The regulatory body already send its response1!!\""
															},
															"value": "The regulatory body already send its response1!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae94fc25b68890d86bc54b89d77ae1121e4862117674a61d07e58986b81e3c75",
																"typeString": "literal_string \"The regulatory body already send its response1!!\""
															}
														],
														"id": 834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13423:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "13423:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 843,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "13549:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13555:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "13549:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 845,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "13567:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13589:20:0",
																	"memberName": "timestamp_commitment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "13567:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13549:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 848,
																"name": "timeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "13613:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13549:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d69742065786365656465642121",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13624:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68b512436bf638c675785860e8cb56f83b1e8130f79c6a400bcf6d48945df089",
																"typeString": "literal_string \"Timelimit exceeded!!\""
															},
															"value": "Timelimit exceeded!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68b512436bf638c675785860e8cb56f83b1e8130f79c6a400bcf6d48945df089",
																"typeString": "literal_string \"Timelimit exceeded!!\""
															}
														],
														"id": 842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13541:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "13541:106:0"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 853,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "13660:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13682:9:0",
														"memberName": "response1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "13660:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 856,
														"name": "_response1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "13694:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13660:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "13660:44:0"
											},
											{
												"expression": {
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 859,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "13715:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13737:19:0",
														"memberName": "timestamp_response1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "13715:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 862,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13759:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13765:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "13759:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13715:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "13715:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 866,
														"name": "_response1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "13790:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13804:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13790:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "13787:679:0",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "13821:645:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 874,
																		"name": "lockingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "13864:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 871,
																				"name": "_bankAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "13844:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13836:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 869,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13836:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13836:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13855:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "13836:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13836:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "13836:42:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 883,
																		"name": "lockingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "13922:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 879,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "13901:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13905:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "13901:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13893:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 877,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13893:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13893:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13913:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "13893:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13893:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 885,
															"nodeType": "ExpressionStatement",
															"src": "13893:43:0"
														},
														{
															"expression": {
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 886,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "13953:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "13975:36:0",
																	"memberName": "unlock_amount_security_money_by_bank",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "13953:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 889,
																	"name": "lockingAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "14014:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13953:74:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 891,
															"nodeType": "ExpressionStatement",
															"src": "13953:74:0"
														},
														{
															"expression": {
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 892,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "14042:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14064:40:0",
																	"memberName": "unlock_amount_security_money_by_Reg_Body",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "14042:62:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 895,
																	"name": "lockingAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "14107:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14042:78:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "14042:78:0"
														},
														{
															"expression": {
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 898,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "14135:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14157:39:0",
																	"memberName": "timestamp_unlock_security_money_by_bank",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "14135:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 901,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "14199:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14205:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "14199:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14135:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 904,
															"nodeType": "ExpressionStatement",
															"src": "14135:79:0"
														},
														{
															"expression": {
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 905,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "14229:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14251:43:0",
																	"memberName": "timestamp_unlock_security_money_by_Reg_Body",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 27,
																	"src": "14229:65:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 908,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "14297:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14303:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "14297:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14229:83:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 911,
															"nodeType": "ExpressionStatement",
															"src": "14229:83:0"
														},
														{
															"expression": {
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 912,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "14329:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14351:16:0",
																	"memberName": "protocol_aborted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 29,
																	"src": "14329:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14370:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "14329:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 917,
															"nodeType": "ExpressionStatement",
															"src": "14329:45:0"
														},
														{
															"expression": {
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 918,
																		"name": "bankRegistrationProtocolCurrentlyRuns",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "14389:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 920,
																	"indexExpression": {
																		"id": 919,
																		"name": "_bankRegProtocolID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "14427:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14389:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14449:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "14389:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "14389:65:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 926,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "14478:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 928,
														"indexExpression": {
															"id": 927,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "14495:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14478:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 929,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "14518:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "14478:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "14478:61:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "12376:288:0",
										"text": "Caller: Regulatory body\nWhen: After the bank commits account information, the Regulatory body checks if the commitment matches with the received information.\nAnd invokes this function to register the response.\nPrevious Function: commitPoBL() by bank*"
									},
									"functionSelector": "c5fe01e4",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfCommitmentMatches",
									"nameLocation": "12681:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "_bankAddr",
												"nameLocation": "12714:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "12706:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "_response1",
												"nameLocation": "12730:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "12725:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12725:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12705:36:0"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12756:0:0"
									},
									"scope": 1230,
									"src": "12672:1875:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "14949:1552:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 938,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "14968:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"expression": {
																		"id": 939,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "14975:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14979:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "14975:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14968:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14990:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14968:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14993:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															},
															"value": "The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07149d9f7eec4185ef167ad1aae99c92fb7dbd4e05a245b62f63a8fc317fbfd2",
																"typeString": "literal_string \"The bank is already registered!!\""
															}
														],
														"id": 937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14960:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14960:68:0"
											},
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "15047:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "15039:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"baseExpression": {
														"id": 949,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "15069:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 952,
													"indexExpression": {
														"expression": {
															"id": 950,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "15093:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15097:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "15093:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15069:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15039:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 955,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "15123:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 957,
																"indexExpression": {
																	"id": 956,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "15161:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15123:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15184:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "15123:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573656e742121",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15190:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															},
															"value": "No instance of the bank registration protocol is running at present!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15115:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "15115:147:0"
											},
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "15299:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "15275:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 964,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 963,
																"name": "BankRegistration",
																"nameLocations": [
																	"15275:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "15275:16:0"
															},
															"referencedDeclaration": 30,
															"src": "15275:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"baseExpression": {
														"id": 966,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "15323:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 968,
													"indexExpression": {
														"id": 967,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "15340:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15323:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15275:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 971,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "15378:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15400:8:0",
																"memberName": "bankAddr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "15378:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 973,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15412:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15416:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15378:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636573732064656e696564206173207468652062616e6b20646f6573206e6f7420686f6c642074686520696e74656e6465642062616e6b20616464726573732121",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15424:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9b8b46cdef77d19c15260ff97650374207efb4ac01e9e8bc8bb33bb80bf5b0c",
																"typeString": "literal_string \"Access denied as the bank does not hold the intended bank address!!\""
															},
															"value": "Access denied as the bank does not hold the intended bank address!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9b8b46cdef77d19c15260ff97650374207efb4ac01e9e8bc8bb33bb80bf5b0c",
																"typeString": "literal_string \"Access denied as the bank does not hold the intended bank address!!\""
															}
														],
														"id": 970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15370:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15370:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "15370:124:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 980,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "15513:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15535:19:0",
																"memberName": "timestamp_response1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 15,
																"src": "15513:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15558:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15513:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f64792068617320616c72656164792073656e642069747320666972737420726573706f6e73652121",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15561:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45a1ed6d6b4c707e053936f2dcc288a6c3a064cefab1141221110f4514a5f250",
																"typeString": "literal_string \"The regulatory body has already send its first response!!\""
															},
															"value": "The regulatory body has already send its first response!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45a1ed6d6b4c707e053936f2dcc288a6c3a064cefab1141221110f4514a5f250",
																"typeString": "literal_string \"The regulatory body has already send its first response!!\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15505:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15505:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "15505:116:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 988,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "15640:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15662:19:0",
																"memberName": "timestamp_response2",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "15640:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15685:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15640:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f647920686173206e6f7420616c72656164792073656e6420697473207365636f6e6420726573706f6e73652121",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15688:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_181c7cafdcb1ace02ba1c752979430910cc43160be774f8bb4fd7263ea73c476",
																"typeString": "literal_string \"The regulatory body has not already send its second response!!\""
															},
															"value": "The regulatory body has not already send its second response!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_181c7cafdcb1ace02ba1c752979430910cc43160be774f8bb4fd7263ea73c476",
																"typeString": "literal_string \"The regulatory body has not already send its second response!!\""
															}
														],
														"id": 987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15632:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "15632:121:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 996,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "15773:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15779:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "15773:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 998,
																				"name": "new_bank_registration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 965,
																				"src": "15791:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																					"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																				}
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15813:19:0",
																			"memberName": "timestamp_response1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 15,
																			"src": "15791:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15773:59:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15772:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1002,
																"name": "timeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "15836:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15772:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d6974206e6f74207965742065786365656465642121",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15847:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															},
															"value": "Timelimit not yet exceeded!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58dd754fa5f828b28223ab0f7ff7c5160642b98e6cc7bd01e783ba06c894b8e9",
																"typeString": "literal_string \"Timelimit not yet exceeded!!\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15764:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "15764:114:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15920:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1014,
																"name": "lockingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "15922:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15920:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1009,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15899:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15903:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15899:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15891:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15891:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15891:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15911:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "15891:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15891:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "15891:45:0"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1018,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "15949:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15971:36:0",
														"memberName": "unlock_amount_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "15949:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16010:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1022,
															"name": "lockingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "16012:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16010:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15949:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "15949:76:0"
											},
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1026,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "16036:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16058:40:0",
														"memberName": "unlock_amount_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "16036:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16036:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "16036:66:0"
											},
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1032,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "16113:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16135:39:0",
														"memberName": "timestamp_unlock_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "16113:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1035,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16177:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16183:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "16177:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16113:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "16113:79:0"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1039,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "16203:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16225:43:0",
														"memberName": "timestamp_unlock_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "16203:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1042,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16271:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16277:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "16271:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16203:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "16203:83:0"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1046,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "16299:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16321:16:0",
														"memberName": "protocol_aborted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "16299:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16340:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16299:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "16299:45:0"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1052,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "16355:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 1054,
														"indexExpression": {
															"id": 1053,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "16372:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16355:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1055,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "16394:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "16355:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "16355:60:0"
											},
											{
												"expression": {
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1058,
															"name": "bankRegistrationProtocolCurrentlyRuns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "16428:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1060,
														"indexExpression": {
															"id": 1059,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "16466:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16428:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16488:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "16428:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "16428:65:0"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "14557:348:0",
										"text": "Caller: Bank\nWhen: If the Regulatory body does not send response2 within time limit, bank can abort the protocol and unlock its money.\nHere, the system will penalize the Regulatory body by deducting its locked amount and transfer the same to the bank.\nPrevious Function: checkIfCommitmentMatches() by Reg Body*"
									},
									"functionSelector": "33bcc388",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit4BankReg",
									"nameLocation": "14920:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14932:2:0"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14949:0:0"
									},
									"scope": 1230,
									"src": "14911:1590:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "16870:1957:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1074,
																"name": "regulatory_Body",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "16889:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1075,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "16908:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16912:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "16908:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16889:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207265677561746f727920626f6479206861732061636365737320746f20696e766f6b65207468652066756e6374696f6e2121",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16920:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															},
															"value": "Only reguatory body has access to invoke the function!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f050e292e32b2da0843a4e9dc8a2a56b44eef29cdfe8060047d8e574d0893f7",
																"typeString": "literal_string \"Only reguatory body has access to invoke the function!!\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16881:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "16881:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1082,
																	"name": "bankID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "16997:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1084,
																"indexExpression": {
																	"id": 1083,
																	"name": "_bankAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "17004:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16997:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17018:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16997:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520676976656e2062616e6b206164647265737320697320696e636f72726563742e205468652062616e6b20697320616c726561647920726567697374657265642121",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17021:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															},
															"value": "The given bank address is incorrect. The bank is already registered!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dd4b2eaedb88fa987849f916219d587995e3f8a743a2a6270784fca7795d425",
																"typeString": "literal_string \"The given bank address is incorrect. The bank is already registered!!\""
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16989:104:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "16989:104:0"
											},
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "_bankRegProtocolID",
														"nameLocation": "17112:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "17104:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"baseExpression": {
														"id": 1092,
														"name": "latestBankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "17134:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1094,
													"indexExpression": {
														"id": 1093,
														"name": "_bankAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "17158:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17134:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17104:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1097,
																	"name": "bankRegistrationProtocolCurrentlyRuns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "17187:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1099,
																"indexExpression": {
																	"id": 1098,
																	"name": "_bankRegProtocolID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "17225:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17187:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17248:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "17187:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e7374616e6365206f66207468652062616e6b20726567697374726174696f6e2070726f746f636f6c2069732072756e6e696e672061742070726573656e742121",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17254:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															},
															"value": "No instance of the bank registration protocol is running at present!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4d50d3f142b02762f38bd9894c13a0c0be771ca8e23faf3a7428ab6af9cf074",
																"typeString": "literal_string \"No instance of the bank registration protocol is running at present!!\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17179:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "17179:147:0"
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "new_bank_registration",
														"nameLocation": "17363:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "17339:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration"
														},
														"typeName": {
															"id": 1106,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1105,
																"name": "BankRegistration",
																"nameLocations": [
																	"17339:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 30,
																"src": "17339:16:0"
															},
															"referencedDeclaration": 30,
															"src": "17339:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_storage_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"baseExpression": {
														"id": 1108,
														"name": "bankRegistration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "17387:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
															"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
														}
													},
													"id": 1110,
													"indexExpression": {
														"id": 1109,
														"name": "_bankRegProtocolID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "17404:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17387:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17339:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1113,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "17443:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17465:19:0",
																"memberName": "timestamp_response2",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "17443:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17488:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17443:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f64792068617320616c72656164792073656e642069747320726573706f6e7365322121",
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17491:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49baa9a444d5fae3a3e1a0ae87b48fde04bb8e0a78e2a9a200c0a1e374afa29f",
																"typeString": "literal_string \"The regulatory body has already send its response2!!\""
															},
															"value": "The regulatory body has already send its response2!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49baa9a444d5fae3a3e1a0ae87b48fde04bb8e0a78e2a9a200c0a1e374afa29f",
																"typeString": "literal_string \"The regulatory body has already send its response2!!\""
															}
														],
														"id": 1112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17435:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "17435:111:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1121,
																	"name": "new_bank_registration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "17565:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																		"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17587:19:0",
																"memberName": "timestamp_response1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 15,
																"src": "17565:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17610:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17565:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726567756c61746f727920626f6479206d7573742070726f766964652069747320726573706f6e736531206265666f72652073656e64696e6720726573706f6e7365322121",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17613:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95337e6d8327604f3b4e687fc3184314e2a5b726bacb039685bb691560ed3e3c",
																"typeString": "literal_string \"The regulatory body must provide its response1 before sending response2!!\""
															},
															"value": "The regulatory body must provide its response1 before sending response2!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95337e6d8327604f3b4e687fc3184314e2a5b726bacb039685bb691560ed3e3c",
																"typeString": "literal_string \"The regulatory body must provide its response1 before sending response2!!\""
															}
														],
														"id": 1120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17557:132:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "17557:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1129,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "17708:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17714:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "17708:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1131,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "17726:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17748:19:0",
																	"memberName": "timestamp_response1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "17726:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17708:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1134,
																"name": "timeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "17771:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17708:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656c696d6974206578636565646564",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17782:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3fb147e0c7c821d52de1db32d26d90c0461dfe61d04f5be95fcd97bc5f11cdf",
																"typeString": "literal_string \"Timelimit exceeded\""
															},
															"value": "Timelimit exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3fb147e0c7c821d52de1db32d26d90c0461dfe61d04f5be95fcd97bc5f11cdf",
																"typeString": "literal_string \"Timelimit exceeded\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17700:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17700:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "17700:103:0"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1139,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "17816:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17838:9:0",
														"memberName": "response2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "17816:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1142,
														"name": "_response2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "17850:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17816:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "17816:44:0"
											},
											{
												"expression": {
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1145,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "17871:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17893:19:0",
														"memberName": "timestamp_response2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "17871:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1148,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "17915:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17921:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "17915:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17871:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "17871:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "lockingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "17975:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1154,
																	"name": "_bankAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "17955:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17947:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1152,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17947:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17947:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17966:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "17947:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17947:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "17947:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "lockingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "18029:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1162,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "18008:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18012:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18008:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18000:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18000:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18000:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18020:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "18000:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18000:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "18000:43:0"
											},
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1169,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "18056:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18078:36:0",
														"memberName": "unlock_amount_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "18056:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "lockingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "18117:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18056:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "18056:74:0"
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1175,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "18141:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18163:40:0",
														"memberName": "unlock_amount_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "18141:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1178,
														"name": "lockingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "18206:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18141:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "18141:78:0"
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1181,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "18230:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18252:39:0",
														"memberName": "timestamp_unlock_security_money_by_bank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "18230:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1184,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "18294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18300:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "18294:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18230:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "18230:79:0"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1188,
															"name": "new_bank_registration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "18320:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																"typeString": "struct SC_Bank_Registration.BankRegistration memory"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18342:43:0",
														"memberName": "timestamp_unlock_security_money_by_Reg_Body",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "18320:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1191,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "18388:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18394:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "18388:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18320:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "18320:83:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1195,
														"name": "_response2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "18427:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18441:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "18427:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "18590:72:0",
													"statements": [
														{
															"expression": {
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1208,
																		"name": "new_bank_registration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "18605:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
																			"typeString": "struct SC_Bank_Registration.BankRegistration memory"
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "18627:16:0",
																	"memberName": "protocol_aborted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 29,
																	"src": "18605:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18646:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "18605:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1213,
															"nodeType": "ExpressionStatement",
															"src": "18605:45:0"
														}
													]
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "18424:238:0",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "18457:109:0",
													"statements": [
														{
															"expression": {
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "18472:17:0",
																"subExpression": {
																	"id": 1198,
																	"name": "bankIDGenerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "18472:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1200,
															"nodeType": "ExpressionStatement",
															"src": "18472:17:0"
														},
														{
															"expression": {
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1201,
																		"name": "bankID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "18504:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1203,
																	"indexExpression": {
																		"id": 1202,
																		"name": "_bankAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "18511:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18504:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1204,
																	"name": "bankIDGenerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "18524:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18504:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1206,
															"nodeType": "ExpressionStatement",
															"src": "18504:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1216,
															"name": "bankRegistration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "18682:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BankRegistration_$30_storage_$",
																"typeString": "mapping(uint256 => struct SC_Bank_Registration.BankRegistration storage ref)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"id": 1217,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "18699:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18682:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
															"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1219,
														"name": "new_bank_registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "18722:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BankRegistration_$30_memory_ptr",
															"typeString": "struct SC_Bank_Registration.BankRegistration memory"
														}
													},
													"src": "18682:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BankRegistration_$30_storage",
														"typeString": "struct SC_Bank_Registration.BankRegistration storage ref"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "18682:61:0"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1222,
															"name": "bankRegistrationProtocolCurrentlyRuns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "18754:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1224,
														"indexExpression": {
															"id": 1223,
															"name": "_bankRegProtocolID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "18792:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18754:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18814:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "18754:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "18754:65:0"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "16511:268:0",
										"text": "Caller: Regulatory body\nWhen: Once the Regulatory body verifies if the bank belongs to the Regulatory body, it invokes this function to register the verification result on BC.\nPrevious Function: checkIfCommitmentMatches() by Regulatory body*"
									},
									"functionSelector": "d1706b6c",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendVerificationResult",
									"nameLocation": "16796:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "_bankAddr",
												"nameLocation": "16827:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "16819:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "_response2",
												"nameLocation": "16843:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "16838:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16818:36:0"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16870:0:0"
									},
									"scope": 1230,
									"src": "16787:2040:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1231,
							"src": "60:18772:0",
							"usedErrors": []
						}
					],
					"src": "34:18800:0"
				},
				"id": 0
			}
		}
	}
}